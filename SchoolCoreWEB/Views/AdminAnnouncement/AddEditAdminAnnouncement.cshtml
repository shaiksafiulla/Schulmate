@model SchoolCoreWEB.Models.AdminAnnouncement
@using Localization.Services
@inject LanguageService _localization
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@{
    string struserid = string.Empty;
    string strtoken;
    var userInfokey = @HttpContextAccessor.HttpContext.Session.GetString("UserInfo");
    if (userInfokey != null)
    {
        var userInfo = JsonConvert.DeserializeObject<VUserInfo>(userInfokey);
        struserid = userInfo.Id.ToString();
    }
    strtoken = @HttpContextAccessor.HttpContext.Session.GetString("strtoken");
}
<style>
    .mul-select {
        min-width: 100%;
    }
</style>


<form id="adminAnnouncemnetForm" class="forms-sample">
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.SessionYearId)
    @Html.HiddenFor(m => m.BranchId, new { @id = "hfbranchid" })
    @* @Html.HiddenFor(m => m.SectionIds, new { @id = "hfsectionids" }) *@

    <div class="card ribbon-box">
        <div class="card-body">
            <div class="ribbon ribbon-info float-start"><i class="mdi mdi-access-point me-1"></i> @_localization.Getkey("Announcement")</div>
            <div class="ribbon-content">
                <div class="row">
                    <div class="col-8">
                        <div class="row">

                            <div class="form-group required mb-3">
                                <label for="title" class="form-label">@_localization.Getkey("Title")</label>
                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control form-control-sm", @id = "title", @required = "required", @maxlength = "100", onkeyup = "Validate();" })
                            </div>

                        </div>
                        <div class="row">

                            <div class="form-group required mb-3">
                                <label for="class" class="form-label">@_localization.Getkey("Class")</label>
                                @Html.ListBoxFor(model => model.SectionIds, Model.ClassSectionSheet, new { @class = "form-select form-select-sm", @id = "ddlsection", @style = "width:100%", @multiple = "multiple" })
                            </div>

                        </div>
                        <div class="row">
                            <div class="form-group mb-3">
                                <label for="description" class="form-label">@_localization.Getkey("Description")</label>
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control form-control-sm", @id = "address", @rows = "2", @maxlength = "250" })
                            </div>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-group mb-3">
                            <img id="imgphoto" src="@(Model.FilePath)" alt="assignment image" width="100" height="100" />
                            <div class="input-group">
                                <input type="file" id="filephoto" name="postedFile1" accept="image/*,.pdf" class="form-control form-control-sm" onchange="uploadFile(6,this)">
                            </div>
                            <br />
                            <label for="name" class="form-label">@_localization.Getkey("UploadType")</label>
                            @Html.RadioButtonFor(model => model.FileType, "1", new { @class = "form-check-input" }) <label>@_localization.Getkey("Image")</label> &nbsp;
                            @Html.RadioButtonFor(model => model.FileType, "2", new { @class = "form-check-input" })  <label>@_localization.Getkey("Pdf")</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-primary" onclick="submitAdminAnnouncement()" id="btnsubmit" disabled="disabled">
            @if (Model.Id > 0)
            {
                <span>@_localization.Getkey("Update")</span>
            }
            else
            {
                <span>@_localization.Getkey("Save")</span>
            }
        </button>
        <button type="button" class="btn btn-light" id="btncancel" onclick="cancel()">@_localization.Getkey("Cancel")</button>
    </div>
    <div class="three-quarters-loadermodel" id="loaderDiv1" style="display:none">
        <div class="loader">
            <div class="loader-inner line-scale">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
            </div>

        </div>
    </div>
</form>


<script type="text/javascript">

    $(document).ready(function () {
        Validate();
        // $('#ddlsection').multiSelect();
        $('#ddlsection').select2({
            dropdownParent: $('#myModalBodyDiv1'),
            placeholder: "select class section",
            tags: true
        });
        $('#ddlsection').on('select2:select', function (e) {
            var selectElements = document.querySelectorAll('.select2-selection__choice');
            selectElements.forEach(function (selectElement) {
                selectElement.style.backgroundColor = '#0d6efd';
            });
        });
        $('#ddlsection').on('select2:unselect', function (e) {
            var unselectElements = document.querySelectorAll('.select2-selection__choice');
            unselectElements.forEach(function (unselectElement) {
                unselectElement.style.backgroundColor = '#0d6efd';
            });
        });
        // var jsmodel = @Html.Raw(Json.Serialize(Model));
        // if (jsmodel != null && jsmodel.SectionIds.length > 0) {
        //     var dbElements = document.querySelectorAll('.select2-selection__choice');
        //     dbElements.forEach(function (dbElement) {
        //         dbElement.style.backgroundColor = '#0d6efd';
        //     });
        // }
    });

    function chkFields() {
        var isvalid = true;
        var selectedIds = $('#ddlsection').val();
        if (selectedIds.length == 0) {
            isvalid = false;
        }
        if ($("#title").val() == "") {
            isvalid = false;
        }
        return isvalid;
    }
    function Validate() {
        if (chkFields()) {
            $('#btnsubmit').prop('disabled', false);
        }
        else {
            $('#btnsubmit').prop('disabled', true);
        }
    }
    function uploadFile(type, file) {
        var filetype = $('[name="FileType"]:checked').val();
        if (validateuploadFile(type, filetype, file) == "") {
            if (filetype == 1) {
                $("#imgphoto").show();
                $("#imgphoto").attr("src", URL.createObjectURL(file.files[0]));
            }
            if (filetype == 2) {
                $("#imgphoto").hide();
                //  $("#imgheader").attr("src", URL.createObjectURL(file.files[0]));
            }
        }
        else {
            if (filetype == 1) {
                $("#imgphoto").show();
                $("#imgphoto").attr("src", "");
            }
            if (filetype == 2) {
                $("#imgphoto").hide();
                // $("#imgheader").attr("src", "");
            }
        }
    }

    function submitAdminAnnouncement() {
        $("#loaderDiv1").show("slow", function () {
            // var selectedSectionIds = $('#ddlsection').val();
            // var serializedArray = JSON.stringify(selectedSectionIds);
            // $("#hfsectionids").val(serializedArray);
            var postData = new FormData($('#adminAnnouncemnetForm')[0]);
            postData.append("AssignmentFile", $("input[name=postedFile1]")[0].files[0]); // file

            $.ajax({
                type: 'POST',
                url: '@Configuration["WebApi:ClientBaseUrl"]' + '/api/AdminAnnouncement/save',
                headers: {
                    'Authorization': 'Bearer ' + `@strtoken`,
                    'UserId': @struserid
                                                    },
                data: postData,
                cache: false,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response != null) {
                        var serviceresult = response;
                        actionAfterResponse('AdminAnnouncementGrid', serviceresult.recordId, serviceresult.statusId, '46');
                    } else {
                        toastr.error(`@_localization.Getkey("Error")`);
                    }
                },
                error: function (response) {
                    toastr.error(`@_localization.Getkey("Error")`);

                }
            });
        })
    }

</script>
