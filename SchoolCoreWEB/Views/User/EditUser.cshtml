@model SchoolCoreWEB.Models.UserInfo
@using Localization.Services
@inject LanguageService _localization

<div class="card">
    <div class="card-body">
        <form id="myForm" class="forms-sample was-validated">
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.UserType)
            @Html.HiddenFor(m => m.PersonId)
            @Html.HiddenFor(m => m.IsSelected)
            @Html.HiddenFor(m => m.Password)
            @Html.HiddenFor(m => m.IsActive)
            @Html.HiddenFor(m => m.HasLogin)
            <div class="form-group mb-3">
                <label for="name" class="form-label">@_localization.Getkey("UserName")</label>
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control form-control-sm", @id = "name", @required = "required", @maxlength = "20", onkeyup = "Validate();" })
            </div>
            <div class="form-group mb-3">
                <label for="password" class="form-label">@_localization.Getkey("ResetPassword")</label>
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control form-control-sm", @id = "password" })
            </div>
            <div class="form-group mb-3">
                @*<label for="loginselected">Login Permission</label>*@
                @Html.CheckBoxFor(model => model.HasLoginSelected, new { @id = "loginselected", @class = "form-check-input" })@_localization.Getkey("LoginPermission")
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-primary" onclick="submitUser()" id="btnsubmit" disabled="disabled">@_localization.Getkey("Update")</button>
                <button type="button" class="btn btn-light" id="btncancel" onclick="cancel()">@_localization.Getkey("Cancel")</button>
            </div>

        </form>
        <div class="three-quarters-loadermodel" id="loaderDiv1" style="display:none">
            <div class="loader">
                <div class="loader-inner line-scale">
                    <div></div>
                    <div></div>
                    <div></div>
                    <div></div>
                    <div></div>
                </div>

            </div>
        </div>
    </div>
</div>



<script type="text/javascript">

    function chkFields() {
        var isvalid = true;
        var name = $("#name").val();
        if (name === "") {
            isvalid = false;
        }
        return isvalid;
    }

    function Validate() {
        if (chkFields()) {
            $('#btnsubmit').prop('disabled', false);
        }
        else {
            $('#btnsubmit').prop('disabled', true);
        }

    }

    function submitUser() {

        $("#loaderDiv1").show("slow", function () {
            var myformdata = $("#myForm").serialize();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Save", "User")',
                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                data: myformdata,
                success: function (response) {
                    if (response != null) {
                        var serviceresult = JSON.parse(response);
                        actionAfterResponse('UserGrid', serviceresult.recordId, serviceresult.statusId, '19');

                    } else {
                        toastr.error(`@_localization.Getkey("Error")`);
                    }
                },
                error: function (response) {
                    toastr.error(`@_localization.Getkey("Error")`);

                }
            })
        })
    }
    Validate();
</script>
