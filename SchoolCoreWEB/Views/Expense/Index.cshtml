@using SchoolCoreWEB.Models
@model SearchExpenseParams
@using Localization.Services
@inject LanguageService _localization
@inject IConfiguration Configuration
@inject IHttpContextAccessor HttpContextAccessor
@{
	string strtoken = @HttpContextAccessor.HttpContext.Session.GetString("strtoken");
	string userParamkey = @HttpContextAccessor.HttpContext.Session.GetString("UserParam");

}


<form id="expenseSummaryForm" class="forms-sample">
	<br />
	<ul class="list-group list-group-horizontal">
		<li class="list-group-item active" style="margin:2px"><a class="nav-link" href="@Url.Action("Index","Expense")">Expenses</a></li>
		<li class="list-group-item" style="margin:2px"><a class="nav-link" href="@Url.Action("Index","Receivable")">Receivables</a></li>		
		
	</ul>
	<br />
	<div class="card ribbon-box">
		<div class="card-body">
			<div class="ribbon ribbon-info float-start"><i class="mdi mdi-access-point me-1"></i> Expenses</div>
			<button class="btn btn-sm btn-info float-end mt-0" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasRight" aria-controls="offcanvasRight"><i class="ri-search-line"></i>Advance Search</button>
			<button type="button" class="btn btn-outline-light btn-sm float-end" onclick="addEditAction('36','0')"><i class="ri-add-line"></i></button>
			<div class="ribbon-content">
				<div class="table-responsive-sm">
					<table class="table table-sm table-bordered dt-responsive nowrap w-100" id="ExpenseSummaryGrid">
						<thead>
							<tr>
								<th style="display:none;">Id</th>
								<th>Expense Date</th>
								<th>Total Expense Amount</th>
								<th>Actions</th>
							</tr>
						</thead>
						<tbody>
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div id="primary-header-modal" class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="primary-header-modalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header modal-colored-header bg-info">
						<h4 class="modal-title" id="primary-header-modalLabel">Modal Heading</h4>
						<button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body" id="myModalBodyDiv1">
					</div>

				</div>
			</div>
		</div>
		<div class="three-quarters-loadermodel" id="loaderDiv" style="display:none">
			<div class="loader">
				<div class="loader-inner line-scale">
					<div></div>
					<div></div>
					<div></div>
					<div></div>
					<div></div>
				</div>

			</div>
		</div>
	</div>
	<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasRight" aria-labelledby="offcanvasRightLabel">
		<div class="d-flex align-items-center bg-info p-3 offcanvas-header">
			<h5 class="text-white m-0" id="offcanvasRightLabel">Advance Search</h5>
			<button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
		</div>
		<div class="offcanvas-body">
			<div class="card">
				<div class="card-body">
					<div class="form-group required mb-3">
						<label for="categoryid" class="form-label">@_localization.Getkey("Year")</label>
						@Html.DropDownListFor(model => model.SessionYearId, Model.SessionYearSheet, @_localization.Getkey("PleaseSelect"), new { @class = "form-select form-select-sm", @id = "ddlsessionyear" })
					</div>
					<div class="form-group mb-3">
						<label for="fromdate" class="form-label">From Date</label>
						@Html.EditorFor(model => model.FromDate, "{0:dd-MM-yyyyTHH:mm:ss}", new { htmlAttributes = new { @type = "date", @class = "form-control form-control-sm datetimepicker", @id = "fromdate" } })
					</div>
					<div class="form-group mb-3">
						<label for="todate" class="form-label">To Date</label>
						@Html.EditorFor(model => model.ToDate, "{0:dd-MM-yyyyTHH:mm:ss}", new { htmlAttributes = new { @type = "date", @class = "form-control form-control-sm datetimepicker", @id = "todate" } })
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-primary" onclick="searchExpenseSummary()">
					<i class="ri-search-line">Search</i>
				</button>
				<button type="button" class="btn btn-light" onclick="resetExpenseSummary()">
					<i class="ri-refresh-line"></i>Reset
				</button>
			</div>
		</div>
	</div>
</form>

@section Scripts {
	<script>
		  $(document).ready(function(){
			   $("#loaderDiv").show("slow", function() {
					   getLimitedExpenseSummary();
				 })

		 });
		   function getLimitedExpenseSummary() {
			   getOperation('@Configuration["WebApi:ClientBaseUrl"]' + `/api/Expense/GetExpenseSummary`,`@strtoken`,`@Html.Raw(@userParamkey)`)
							  .then(response => {
								   setBindingValues(response);
							  })
							  .catch(error => {
								  console.log(error);
								   toastr.error(`@_localization.Getkey("Error")`);
							  });
		  }
			function setBindingValues(data){

						   var expenseData=[];

												   $.each(data,function(key,value){

													  var btnaction='<div class="btn-group btn-group-sm dropdown" onclick="onSelect(this,ExpenseSummaryGrid);"> '+
														  '<a href="#" class="table-action-btn dropdown-toggle arrow-none btn btn-light btn-xs" data-bs-toggle="dropdown" aria-expanded="false" ><i class="mdi mdi-dots-horizontal"></i></a>'+
														  '<div class="dropdown-menu dropdown-menu-end">'+
															  '<a class="dropdown-item" href="#" onclick="getAllExpensesByDate(`'+value.strExpenseDate+'`,'+value.id+')"><i class="ri-eye-line"></i>&nbsp; View</a>'+
														  '</div>'+
													  '</div>'

													   expenseData.push([value.id,value.strExpenseDate,value.totalAmount,btnaction])
												  })

												  $("#ExpenseSummaryGrid").DataTable({
													  "bDestroy": true,
													   data : expenseData,
													  order: [],
													   "aoColumnDefs": [{ "bVisible": false, "aTargets": [0] }],
													 // dom: 'lBfrtip',
													   dom: '<"container-fluid"<"row"<"col"l><"col"Bf>>>rt<"row"<"col"i><"col"p>>',
														 buttons: [
															   {
																  extend:    'csvHtml5',
																  text:      '<i class="ri-file-excel-line"></i>',
																  titleAttr: 'csv',
																  filename : 'Expense Summary',
																  className: 'btn btn-outline-light btn-sm',
																   exportOptions: {
																		  columns: [ 1,2]
																	  }
															  }
														  ]
												  })
												  $("#loaderDiv").hide();

		  }

			   function resetExpenseSummary(){
						 $("#fromdate").val('');
						 $("#todate").val('');
						   $("#ddlsessionyear").val('');
						  window.location = '@Url.Action("Index", "Expense")';
			}
			   function searchExpenseSummary() {

				   $("#loaderDiv").show("slow", function() {
						var obj = {};
					   obj.FromDate = $("#fromdate").val();
					   obj.ToDate = $("#todate").val();
						obj.SessionYearId = $("#ddlsessionyear").val();
						var jdata = JSON.stringify(obj);
						fetch('@Configuration["WebApi:ClientBaseUrl"]' + '/api/Expense/SearchExpenseSummary', {
							method: 'POST',
							headers: {
								'Content-Type': 'application/json',
								'Authorization': 'Bearer ' + `@strtoken`,
								'UserParam': `@Html.Raw(@userParamkey)`
							},
							body: jdata
						})
						.then(response => response.json())
						.then(result => {
							setBindingValues(result);
						})
						.catch(error => {
							toastr.error(`@_localization.Getkey("Error")`);
						});
				 })


			   }

		var getAllExpensesByDate=function(strDate, id){
			 if(id != null && id > 0){
				 document.getElementById('primary-header-modalLabel').innerHTML="Expenses :" + strDate;
			 }
			   var url = '@Url.Action("GetAllExpenseByDate", "Expense")?Id=' + id;
			 $("#myModalBodyDiv1").load(url,function(){
				 $("#primary-header-modal").modal("show");
			 })
		 }
	</script>
}



