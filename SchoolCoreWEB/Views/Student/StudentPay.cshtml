@model SchoolCoreWEB.Models.StudentPay
@using Localization.Services
@inject LanguageService _localization
@inject IConfiguration Configuration
@inject IHttpContextAccessor HttpContextAccessor
@{
    string strtoken = @HttpContextAccessor.HttpContext.Session.GetString("strtoken");
    string userParamkey = @HttpContextAccessor.HttpContext.Session.GetString("UserParam");

}

<form id="studentpayForm" class="forms-sample">
    @Html.HiddenFor(m => m.StudentId)
    @Html.HiddenFor(m => m.StudentFeeId)
    @Html.HiddenFor(m => m.FeeStructureId)
    @Html.HiddenFor(m => m.BranchId)
    @Html.HiddenFor(m => m.SessionYearId)
    @Html.HiddenFor(m => m.BranchClassId)
    @Html.HiddenFor(m => m.ClassId)
    @Html.HiddenFor(m => m.DueAmount, new { @id = "hfdueamount" })





    <div class="card">
        <div class="card-header">

            <div class="row">
                <div class="col-6">
                    <div class="row">
                        <div class="col-5">
                            <label font-weight:bold">@_localization.Getkey("StudentName") : </label>
                        </div>
                        <div class="col-7">
                            <label style="font-weight:bold">@Model.StudentName</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5">
                            <label font-weight:bold">@_localization.Getkey("Age") : </label>
                        </div>
                        <div class="col-7">
                            <label style="font-weight:bold">@Model.Age</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5">
                            <label font-weight:bold">@_localization.Getkey("Gender") : </label>
                        </div>
                        <div class="col-7">
                            <label style="font-weight:bold">@Model.Gender</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5">
                            <label font-weight:bold">@_localization.Getkey("MobileNo") : </label>
                        </div>
                        <div class="col-7">
                            <label style="font-weight:bold">@Model.MobileNo</label>
                        </div>
                    </div>
                </div>
                <div class="col-6">
                    <div class="row">
                        <div class="col-5">
                            <label font-weight:bold">@_localization.Getkey("AdmissionNo") : </label>
                        </div>
                        <div class="col-7">
                            <label style="font-weight:bold">@Model.AdmissionNo</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5">
                            <label font-weight:bold">@_localization.Getkey("RollNo") : </label>
                        </div>
                        <div class="col-7">
                            <label style="font-weight:bold">@Model.RollNo</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5">
                            <label font-weight:bold">@_localization.Getkey("Class") : </label>
                        </div>
                        <div class="col-7">
                            <label style="font-weight:bold">@Model.ClassName</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5">
                            <label font-weight:bold">@_localization.Getkey("Section") : </label>
                        </div>
                        <div class="col-7">
                            <label style="font-weight:bold">@Model.SectionName</label>
                        </div>
                    </div>
                </div>

            </div>
            <hr />
            <div class="row">
                <div class="col-6">
                    <div class="form-group mb-3">
                        <label for="dueamount" class="form-label">@_localization.Getkey("DueAmount")</label>
                        @Html.TextBoxFor(model => model.DueAmount, new { @class = "form-control form-control-sm", @readonly = "readonly" })
                    </div>
                    <div class="form-group required mb-3">
                        <label for="payamount" class="form-label">@_localization.Getkey("PayAmount")</label>
                        @Html.TextBoxFor(model => model.Amount, new { @class = "form-control form-control-sm", @id = "payamount", @required = "required", onkeyup = "Validate();", @onkeypress = @"return event.charCode === 0 || /\d/.test(String.fromCharCode(event.charCode));" })
                    </div>
                    <div class="form-group required mb-3">
                        <label for="paymode" class="form-label">@_localization.Getkey("PayMode")</label>
                        @Html.DropDownListFor(model => model.PayModeId, Model.PayModeSheet, @_localization.Getkey("PleaseSelect"), new { @class = "form-select form-select-sm", @id = "ddlpaymode", @required = "required", onChange = "selectedPaymodeIndexChanged()" })
                    </div>



                </div>
                <div class="col-6">
                    <div class="form-group mb-3">
                        <label for="dueamount" class="form-label">@_localization.Getkey("ReferenceNo")</label>
                        @Html.TextBoxFor(model => model.ReferenceNo, new { @class = "form-control form-control-sm", @id = "refno", @maxlength = "30", onkeyup = "Validate();" })
                    </div>
                    <div class="form-group mb-3">
                        <label for="dueamount" class="form-label">@_localization.Getkey("Remarks")</label>
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control form-control-sm", @id = "remarks", onkeyup = "Validate();", @rows = "2", @maxlength = "180" })
                    </div>


                </div>
            </div>

        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary" onclick="submitStudentPay()" id="btnsubmit" disabled="disabled">
                <span>
                    @_localization.Getkey("Post")
                </span>

            </button>
            <button type="button" class="btn btn-light" id="btncancel" onclick="cancel()">@_localization.Getkey("Cancel")</button>
        </div>
    </div>

    <div id="primary-header-modalprogress" class="modal fade" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="primary-header-modalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header modal-colored-header bg-warning">
                    <h4 class="modal-title" id="primary-header-modalLabelprogress">Modal Heading</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="progressModalBodyDiv">
                </div>
            </div>
        </div>
    </div>

    <div class="three-quarters-loadermodel" id="loaderDiv1" style="display:none">
        <div class="loader">
            <div class="loader-inner line-scale">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
            </div>

        </div>
    </div>
</form>





<script>
    $(document).ready(function () {
        Validate();
        // onClickOptions(1);
    });
    function onClickOptions(type) {
        if (type == 1) {
            $("#divrequest").hide();
            $("#divpayment").show();
        }
        else {
            $("#divpayment").hide();
            $("#divrequest").show();
        }
    }
    function selectedPaymodeIndexChanged() {
        Validate();
    }

    function chkFields() {
        var isvalid = true;
        var validNumber = new RegExp(/^\d+$/);
        var paymode = $('#ddlpaymode').val();
        if (paymode === "") {
            isvalid = false;
        }
        var paydue = $('#payamount').val();
        if (paydue === "") {
            isvalid = false;
        }
        else if (paydue !== "") {
            if (paydue.match(validNumber)) {
                if (parseFloat(paydue) === 0) {
                    isvalid = false;
                }
                if (parseFloat(paydue) > $('#hfdueamount').val()) {
                    isvalid = false;
                }
            }
            else {
                isvalid = false;
            }
        }
        return isvalid;
    }
    function Validate() {
        if (chkFields()) {
            $('#btnsubmit').prop('disabled', false);
        }
        else {
            $('#btnsubmit').prop('disabled', true);
        }
    }

    function submitStudentPay() {
        $("#loaderDiv1").show("slow", function () {
            var myformdata = $("#studentpayForm").serialize();         
            fetch('@Configuration["WebApi:ClientBaseUrl"]' + '/api/Student/StudentPay/Save', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                            'Authorization': 'Bearer ' + `@strtoken`,
                            'UserParam': `@Html.Raw(@userParamkey)`
                        },
                        body: myformdata
                    })
                    .then(response => response.json())
                    .then(result => {                       
                        if(result !=null){                            
                            toastr.success(`@_localization.Getkey("Success")`);

                            $("#primary-header-modal").modal("hide");
                            $("#loaderDiv1").hide();        

                            var serviceresult = result;      
                            onReceiptClick(serviceresult.recordId);
                            //actionAfterResponse('StudentGrid', serviceresult.recordId, serviceresult.statusId, '6');
                             
                        }
                        
                    })
                    .catch(error => {
                       // console.log(error);
                        toastr.error(`@_localization.Getkey("Error")`);
                    });
        })
    }
    // var onFeeReceiptClick=function(paymentid){
    //       var url = '@Url.Action("Index", "FeeReceipt")?paymentId=' + paymentid;
    //          //  $('#progressModalBodyDiv').load(url, function () {
    //          //    $('#primary-header-modalprogress').modal("show");
    //          // })
    //       printStudentReport(url);
    //  }
</script>