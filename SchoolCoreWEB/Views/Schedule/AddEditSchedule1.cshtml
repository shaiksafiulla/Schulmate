@model SchoolCoreWEB.Models.Schedule
@using Localization.Services
@inject LanguageService _localization

<form id="myForm">
    @Html.HiddenFor(m=>m.Id, new { @id="hfscheduleid" })
    @Html.HiddenFor(m=>m.StatusId, new { @id="hfstatusid" })
    <div class="row justify-content-center">
        <div class="col-lg-7 col-md-10 col-sm-11">
            <div class="horizontal-steps mt-2 mb-2 pb-2" id="tooltip-container">
                <div class="horizontal-steps-content">
                    <div class="step-item current" id="divprogstart">
                        <span id="spprogstart">@_localization.Getkey("Start")</span>
                    </div>
                    <div class="step-item" id="divprogschedule">
                        <span id="spprogschedule">@_localization.Getkey("Schedule")</span>

                    </div>
                    <div class="step-item" id="divprogsubject">
                        <span id="spprogsubject">@_localization.Getkey("Subjects")</span>
                    </div>
                    <div class="step-item" id="divprogtimetable">
                        <span id="spprogtimetable">@_localization.Getkey("TimeTable")</span>
                    </div>
                    <div class="step-item" id="divprogteacher">
                        <span id="spprogteacher">@_localization.Getkey("TeacherAllocation")</span>
                    </div>
                    <div class="step-item" id="divprogstudent">
                        <span id="spprogstudent">@_localization.Getkey("StudentAllocation")</span>
                    </div>
                    <div class="step-item" id="divprogfinish">
                        <span id="spprogfinish">@_localization.Getkey("Complete")</span>
                    </div>
                </div>
                <div class="process-line" id="divprocessline" style="width: 0%;"></div>
            </div>
        </div>
    </div>
    <hr />
    <div class="row" id="divschedule">
        <div class="col-3">
            <div class="card ribbon-box">
                <div class="card-body">
                    <div class="ribbon ribbon-info float-start"><i class="mdi mdi-access-point me-1"></i> @_localization.Getkey("BasicInfo")</div>
                    <div class="ribbon-content">
                        <div class="row">
                            <div class="form-group mb-3">
                                <label for="firstName" class="form-label">@_localization.Getkey("Title")</label>
                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @id="title", @required = "required",@maxlength="80",  onkeyup="Validate();"  })
                            </div>
                            <div class="form-group mb-3">
                                <label for="type" class="form-label">@_localization.Getkey("ExamType")</label>
                                @Html.DropDownListFor(model => model.ExamTypeId, Model.ExamTypeSheet, @_localization.Getkey("PleaseSelect"), new { @class = "form-select", @id="ddlexamtype", @required = "required", onChange="selectedExamTypeIndexChanged()"})
                            </div>
                           
                            <div class="form-group mb-3">
                                <label for="time" class="form-label">@_localization.Getkey("ExamTime")</label>
                                <table class="table table-hover table-sm table-bordered table-centered mb-0" id="tbltime">
                                    <thead>
                                        <tr>
                                            <th style="display:none">Id</th>
                                            <th>@_localization.Getkey("Select")</th>
                                            <th>@_localization.Getkey("Time")</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in @Model.LstExamTime)
                                        {
                                            <tr>
                                                <td style="display:none">
                                                    <input type="hidden" name="hfexamid" value="@item.Id" />

                                                </td>
                                                <td>
                                                    <input type="checkbox" checked="@item.IsSelected" class="form-check-input" onclick="getTimeCount()"/>

                                                </td>
                                                <td>
                                                    @item.FromTime - @item.ToTime
                                                </td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                             <div class="form-group mb-3">
                                 <label for="type" class="form-label">@_localization.Getkey("ExamsPerDay")</label>
                                @Html.TextBoxFor(model => model.ExamCount, new { @class = "form-control", @id="examcount", @maxlength="2", @style="background-Color:smokewhite", @readonly="readonly" })

                            </div>


                            <div class="form-group mb-3">
                                <label for="description" class="form-label">@_localization.Getkey("Description")</label>
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @id="description", @rows="2",@maxlength="250" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-3">
            <div class="card ribbon-box">
                <div class="card-body">
                    <div class="ribbon ribbon-info float-start"><i class="mdi mdi-access-point me-1"></i> Dates</div>
                    <div class="ribbon-content">
                        <div class="row">
                            <div class="form-group mb-3">
                                <label for="startdate">@_localization.Getkey("StartDate")</label>
                                @Html.EditorFor(model => model.StartDate, "{0:dd-MM-yyyyTHH:mm:ss}", new { htmlAttributes = new { @type = "date", @class = "form-control datetimepicker", @required = "required", @id="startdate", onChange="getDatelist();" } })
                            </div>
                            <div class="form-group mb-3">
                                <label for="enddate">@_localization.Getkey("EndDate")</label>
                                @Html.EditorFor(model => model.EndDate, "{0:dd-MM-yyyyTHH:mm:ss}", new { htmlAttributes = new { @type = "date", @class = "form-control datetimepicker", @required = "required", @id="enddate", onChange="getDatelist();" } })
                            </div>

                        </div>
                        <div class="row" id="divdate" style="display:none">
                            <div class="text-center">@_localization.Getkey("ChooseDates")</div>
                            <table class="table table-hover table-sm table-bordered table-centered mb-0" id="tbldate">
                                <thead>
                                    <tr>
                                        <th>
                                            <div class="form-check form-check-inline">
                                                <input type="checkbox" class="form-check-input" id="chkdate">
                                                <label class="form-check-label" for="chkdate">@_localization.Getkey("SelectAll")</label>
                                            </div>
                                        </th>
                                        <th>@_localization.Getkey("Date")</th>
                                        <th>@_localization.Getkey("Remarks")</th>
                                    </tr>
                                </thead>
                                <tbody id="datebody">
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="card ribbon-box">
                <div class="card-body">
                    <div class="ribbon ribbon-info float-start"><i class="mdi mdi-access-point me-1"></i> @_localization.Getkey("ClassesAndTeachers")</div>

                    <div class="ribbon-content">
                        <div class="row">
                           @*  <div class="form-group mb-3">
                                <label for="type" class="form-label">@_localization.Getkey("Branch")</label>
                                @Html.DropDownListFor(model => model.BranchId, Model.BranchSheet, @_localization.Getkey("PleaseSelect"), new { @class = "form-select", @id="ddlbranch", @required = "required", onChange="selectedBranchIndexChanged()"})
                            </div> *@
                            <div class="row" id="divclssec" style="display:none;">
                                <div class="col-6">
                                    <div class="text-center">@_localization.Getkey("ChooseClasses")</div>
                                    <table class="table table-sm table-bordered table-centered mb-0" id="tblclass">
                                        <thead>
                                            <tr>
                                                <th style="display:none">Id</th>
                                                <th style="width:20%; text-align:center">
                                                    <div class="form-check form-check-inline">
                                                        <input type="checkbox" class="form-check-input" id="chkcls">
                                                        <label class="form-check-label" for="chkcls">All</label>
                                                    </div>
                                                </th>
                                                <th style="width:50%">@_localization.Getkey("Class")</th>
                                               @*  <th style="width:30%">@_localization.Getkey("Marks")</th> *@
                                            </tr>
                                        </thead>
                                        <tbody id="bodyclass">
                                        </tbody>
                                    </table>
                                </div>
                                @*<div class="col-4">
                                    <div class="text-center"> @_localization.Getkey("ChooseExamSections")</div>
                                    <table class="table table-sm table-bordered table-centered mb-0" id="tblsection">
                                        <thead>
                                            <tr>
                                                <th style="display:none">Id</th>
                                                <th>
                                                    <div class="form-check form-check-inline">
                                                        <input type="checkbox" class="form-check-input" id="chksec">
                                                        <label class="form-check-label" for="chksec">@_localization.Getkey("All")</label>
                                                    </div>
                                                </th>
                                                <th>@_localization.Getkey("Section")</th>
                                            </tr>
                                        </thead>
                                        <tbody id="bodysection">
                                        </tbody>
                                    </table>
                                </div>*@
                                 <div class="col-6">
                                     <div class="text-center"> @_localization.Getkey("ChooseTeachers")</div>
                                    <table class="table table-sm table-bordered table-centered mb-0" id="tblteacher">
                                        <thead>
                                            <tr>
                                                <th style="display:none">Id</th>
                                                <th>
                                                    <div class="form-check form-check-inline">
                                                        <input type="checkbox" class="form-check-input" id="chktea">
                                                        <label class="form-check-label" for="chktea">@_localization.Getkey("All")</label>
                                                    </div>
                                                </th>
                                                <th>@_localization.Getkey("Teacher")</th>
                                            </tr>
                                        </thead>
                                        <tbody id="bodyteacher">
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary" onclick="submitSchedule()" id="btnsubmit" disabled="disabled">@_localization.Getkey("Save")</button>
            <button type="button" class="btn btn-info" onclick="navigateDiv(1,2)" id="btnschednxt" style="display:none">@_localization.Getkey("Next")</button>
        </div>
    </div>
    <div class="row" id="divschedulebar" style="display:none">
        <div class="col-6">
            <div class="row">
                <div class="col-5">
                    <label>@_localization.Getkey("Title") : </label>
                </div>
                <div class="col-7">
                    <label id="lbltitle" class="form-group-mb3" />
                </div>
            </div>
            <div class="row">
                <div class="col-5">
                    <label>@_localization.Getkey("ExamType") : </label>
                </div>
                <div class="col-7">
                    <label id="lblexamtype" class="form-group-mb3" />
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="row">
                <div class="col-5">
                    <label>@_localization.Getkey("StartDate") : </label>
                </div>
                <div class="col-7">
                    <label id="lblstartdate" class="form-group-mb3" />
                </div>
            </div>
            <div class="row">
                <div class="col-5">
                    <label>@_localization.Getkey("EndDate") : </label>
                </div>
                <div class="col-7">
                    <label id="lblenddate" class="form-group-mb3" />
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="row" id="divclassubj" style="display:none">
        <div class="text-center"><h3>@_localization.Getkey("Subjects")</h3></div>
        <table class="table table-sm table-bordered table-centered mb-0" style="width:100%" id="tblschedsubject"></table>
        <div class="modal-footer">
            <button type="button" class="btn btn-info" onclick="navigateDiv(2,1)" id="btnsubjprev" style="display:none">@_localization.Getkey("Prev")</button>
            <button type="button" class="btn btn-primary" onclick="submitSubject()" id="btnsubmitsubject">@_localization.Getkey("Save")</button>
            <button type="button" class="btn btn-info" onclick="navigateDiv(2,3)" id="btnsubjnxt" style="display:none">@_localization.Getkey("Next")</button>
        </div>
    </div>
    <div class="row" id="divtimetable" style="display:none">
        <div class="text-center"><h3>@_localization.Getkey("TimeTable")</h3></div>
        <table class="table table-sm table-bordered table-centered mb-0" style="width:100%" id="tbltimetable">
            <thead>
            </thead>
        </table>
        <div class="modal-footer">
            <button type="button" class="btn btn-info" onclick="navigateDiv(3,2)" id="btntimetblprev" style="display:none">@_localization.Getkey("Prev")</button>
            @*<button type="button" class="btn btn-primary" onclick="submitTimeTable()" id="btnsubmittimetbl">Save</button>*@
        <button type="button" class="btn btn-primary" onclick="submitScheduleExam()" id="btnsubmittimetbl">@_localization.Getkey("Save")</button>
        <button type="button" class="btn btn-info" onclick="navigateDiv(3,4)" id="btntimetblnxt" style="display:none">@_localization.Getkey("Next")</button>
        </div>
        <hr />
        @*class="carousel"*@
       @* <ul id="ulTimeTbl" class="list-group list-group-vertical-sm">
        </ul>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary" onclick="submitScheduleBranchClassExam()" id="btnsubmittimetblprocess">
                Process
            </button>
        </div>*@
    </div>
    <div class="row" id="divteacher" style="display:none">
        <div class="text-center"><h3>@_localization.Getkey("TeacherAllocation")</h3></div>
        <table class="table table-sm table-bordered table-centered mb-0" style="width:100%" id="tblteacherresult">
            <thead>
            </thead>
        </table>
        <div class="modal-footer">
            <button type="button" class="btn btn-info" onclick="navigateDiv(4,3)" id="btnteachprev" style="display:none">@_localization.Getkey("Prev")</button>
            <button type="button" class="btn btn-primary" onclick="submitScheduleTeacher()" id="btnsubmitteacher">@_localization.Getkey("Save")</button>
            <button type="button" class="btn btn-info" onclick="navigateDiv(4,5)" id="btnteachnxt" style="display:none">@_localization.Getkey("Next")</button>
        </div>
        <hr />
        @*class="list-group list-group-horizontal-sm"*@
@*        <ul id="ulTeacherTbl" class="list-group list-group-vertical-sm">
        </ul>
        <div class="modal-footer">
            <button type="button" class="btn btn-primary" onclick="submitScheduleTeacherExamDate()" id="btnsubmitteacherprocess">
                Process
            </button>
        </div>*@
    </div>
    <div class="row" id="divstudent" style="display:none">
        <div class="text-center"><h3>@_localization.Getkey("StudentAllocation")</h3></div>
        <table class="table table-sm table-bordered table-centered mb-0" style="width:100%" id="tblstudentresult">
            @*<thead>

                <tr>
                    <th>Id</th>
                    <th>ScheduleSectionId</th>
                    <th>Roll No</th>
                    <th>Name</th>
                    <th>Gender</th>
                    <th>Class</th>
                    <th>Section</th>
                    <th>Exam Section</th>
                </tr>
            </thead>*@
        </table>
        <div class="modal-footer">
            <button type="button" class="btn btn-info" onclick="navigateDiv(5,4)" id="btnstudprev" style="display:none">@_localization.Getkey("Prev")</button>
            @*<button type="button" class="btn btn-primary" onclick="submitScheduleStudent()" id="btnsubmitstudent">Save</button>*@
        <button type="button" class="btn btn-primary" onclick="submitScheduleRollNo()" id="btnsubmitstudent">@_localization.Getkey("Save")</button>
        <button type="button" class="btn btn-info" onclick="navigateDiv(5,6)" id="btnstudnxt" style="display:none">@_localization.Getkey("Next")</button>
        </div>
    </div>
    <div class="row" id="divcomplete" style="display:none">

        <div id="divbeforecomplete" style="display:none">
            <div class="text-center"><h3>@_localization.Getkey("ClickFinish")</h3></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" id="btnbeforecomprev" onclick="navigateDiv(6,5)" style="display:none">@_localization.Getkey("Prev")</button>
                <button type="button" class="btn btn-primary" id="btnfinish" onclick="submitFinish()">@_localization.Getkey("Finish")</button>
            </div>
        </div>
        <div id="divaftercomplete" style="display:none">
            <div class="text-center"><h3>@_localization.Getkey("ScheduleCompleted")</h3></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" id="btnaftercomprev" onclick="navigateDiv(6,5)" style="display:none">@_localization.Getkey("Prev")</button>
            </div>
        </div>

    </div>
    <div class="three-quarters-loadermodel" id="loaderDiv1" style="display:none">
        <div class="loader">
            <div class="loader-inner line-scale">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
            </div>

        </div>
    </div>
</form>
@*<link href="~/assets/css/slick.css" rel="stylesheet" type="text/css" />
    <script src="~/assets/js/slick.min.js"></script>*@
@*<link href="~/assets/css/lightslider.min.css" rel="stylesheet" type="text/css" />
    <script src="~/assets/js/lightslider.min.js"></script>*@
@*<script src="~/assets/js/slick.min.js"></script>*@
@*<script src="~/assets/vendor/jquery/jquery.min.js"></script>*@
<script type="text/javascript">
     //var clsArray=[];
     //var secArray=[];
     var presubjcolumns=[];
     var lstbrclsExam=[];
     var lstSchedTeaArray=[];
     var lstSchedExamIds=[];
      var lstSchedclssubIds=[];
     var lstSchedExamDateArray=[];
     var lstSchedExamTimeArray=[];
    $(document).ready(function () {
        if (@Html.Raw(Json.Serialize(Model)) != null) {
            var objSchedule = @Html.Raw(Json.Serialize(Model));
            getScheduleClassAndSectionByBranch();
         if(objSchedule.Id > 0 && objSchedule.StatusId >= 1){
             $("#hfscheduleid").val(objSchedule.Id);
             getDatelist();
            // selectedBranchIndexChanged();
             
             setProgress(objSchedule.StatusId);
             getScheduleStatus();
         }
        }

        $('#chkcls').change(function () {
             $('#tblclass tbody tr td input[type="checkbox"]').prop('checked', $(this).prop('checked'));
             Validate();
        });
        //$('#chksec').change(function () {
        //    $('#tblsection tbody tr td input[type="checkbox"]').prop('checked', $(this).prop('checked'));
        //    Validate();
        //});
         $('#chktea').change(function () {
            $('#tblteacher tbody tr td input[type="checkbox"]').prop('checked', $(this).prop('checked'));
            Validate();
        });
        $('#chkdate').change(function () {
            $('#tbldate tbody tr td input[type="checkbox"]').prop('checked', $(this).prop('checked'));
            Validate();
        });


        //$("#ulTimeTbl").lightSlider();
       // $("#ulTeacherTbl").lightSlider();
      // setTimeout(startSlider, 2000);
           //$('.carousel').slick({
           //       slide: 'li'
           //     });
     });
     function startSlider(){
         $('.carousel').slick({
              slide: 'li'
            });
        // $('.carousel').slick({slidesToShow:3, slidesToScroll:3, dots:true});
     }

     


     
    
      function getDatelist(){
          if ($("#startdate").val() !== "" && $("#enddate").val() !== "") {
              var obj = {};
              obj.StartDate = $("#startdate").val();
              obj.EndDate = $("#enddate").val();
              obj.ScheduleId = $("#hfscheduleid").val();
                 $("#loaderDiv1").show();
                 $.ajax({
                             type: "post",
                             async : false,
                             url: '@Url.Action("GetScheduleDate","Schedule")',
                             data: { model : JSON.stringify(obj)},
                                 dataType: 'json',
                             traditional: true,
                             success: function (response) {
                                 if (response != null) {                                    
                                     var result = response;
                                    
                                     $("#datebody").empty();

                                     for (var j = 0; j < result.length; j++){
                                         insertintotbl(result[j]);
                                         }

                                     $("#divdate").show();
                                     $("#loaderDiv1").hide();
                                     Validate();
                                 }
                             }
                         });
         }
      }

     function getDateArray(){
         var chkDateArray=[];
         $("#tbldate tbody tr").each(function () {
                 var tr = $(this);
                     var dtObj = {};
                     var firstCol = tr.find("input").eq(0).is(':checked');
                     var secondCol = tr.find("span").eq(0).html();
                     dtObj.IsSelected = firstCol;
                     dtObj.ExamDate = secondCol;
                     chkDateArray.push(dtObj);
         });
         return chkDateArray;
     }
     function getTimeArray(){
         var chkTimeArray=[];
         $("#tbltime tbody tr").each(function () {
                 var tr = $(this);
                     var paramcls = {};
                     var FirstCol = tr.find("td").eq(0).html();
                     var SecondCol = tr.find("input").eq(1).is(':checked');

                     paramcls.Id = $(FirstCol).val();
                     paramcls.IsSelected = SecondCol;
                     chkTimeArray.push(paramcls);
         });

         return chkTimeArray;
     }
     function getClassArray(){
         var chkClsArray=[];
         $("#tblclass tbody tr").each(function () {
             var tr = $(this);
             var paramcls = {};
             var FirstCol = tr.find("td").eq(0).html();
            var SecondCol = tr.find("td").eq(1).html();
            var ThirdCol = tr.find("td").eq(2).html();
             var FourthCol = tr.find("input").eq(0).is(':checked');
            // var FifthCol = tr.find("td:eq(3) input");
             paramcls.Id = parseInt(FirstCol);
            paramcls.BranchId = parseInt(SecondCol);
            paramcls.ClassId = parseInt(ThirdCol);
            paramcls.IsSelected = FourthCol;
            
           // paramcls.Marks = $(FifthCol).val();
             chkClsArray.push(paramcls);
         });
         return chkClsArray;
     }
     //function getSectionArray(){
     //    var chkSecArray=[];
     //    $("#tblsection tbody tr").each(function () {
     //    var tr = $(this);
     //        var paramsec = {};
     //        var FirstCol = tr.find("td").eq(0).html();
     //        var SecondCol = tr.find("input").eq(0).is(':checked');
     //        paramsec.Id = parseInt(FirstCol);
     //        paramsec.IsSelected = SecondCol;
     //        chkSecArray.push(paramsec);
     //    });
     //    return chkSecArray;
     //}
     function getTeacherArray(){
         var chkSecArray=[];
         $("#tblteacher tbody tr").each(function () {
         var tr = $(this);
             var paramsec = {};
             var FirstCol = tr.find("td").eq(0).html();
             var SecondCol = tr.find("input").eq(0).is(':checked');
             paramsec.Id = parseInt(FirstCol);
             paramsec.IsSelected = SecondCol;
             chkSecArray.push(paramsec);
         });
         return chkSecArray;
     }
     function insertintotblcls(data){
        
             var tblbdy = document.getElementById("bodyclass");
                 var rowIndex= tblbdy.rows.length;
                 var newRow = tblbdy.insertRow(rowIndex);
                 cell1 = newRow.insertCell(0);
                 cell1.innerHTML = data.Id;
                 cell1.style.display="none";

                 cell2 = newRow.insertCell(1);
                 cell2.innerHTML = data.BranchId;
                 cell2.style.display="none";

                cell3 = newRow.insertCell(2);
                cell3.innerHTML = data.ClassId;
                cell3.style.display = "none";

                 var chk = document.createElement("input");
                 chk.type="checkbox";
                 chk.id="ClsIsSelected";
                 chk.className="form-check-input";
                 chk.checked=data.IsSelected;
                 chk.onclick=(function() { return function(){ Validate(); }})();


                     cell4 = newRow.insertCell(3);
                 cell4.appendChild(chk);

                     var spcls = document.createElement("span");
                     spcls.innerText =data.ClassName; //+' (Students : '+data.StudentCount+')';
                     cell5 = newRow.insertCell(4);
                     cell5.appendChild(spcls);

                 //     var mrk = document.createElement("input");
                 //     mrk.type="text";
                 //     mrk.id="clsmark";
                 //     mrk.className="form-control form-control-sm";
                 //     mrk.value = data.Marks;

                 //     cell6 = newRow.insertCell(5);

                 // cell6.appendChild(mrk);
     }
     //function insertintotblsec(data){
     //    var tblbdy = document.getElementById("bodysection");
     //    var rowIndex= tblbdy.rows.length;
     //    var newRow = tblbdy.insertRow(rowIndex);
     //    cell1 = newRow.insertCell(0);
     //    cell1.innerHTML = data.Id;
     //    cell1.style.display="none";


     //    var chk = document.createElement("input");
     //    chk.type="checkbox";
     //    chk.id="ClsIsSelected";
     //    chk.className="form-check-input";
     //    chk.checked=data.IsSelected;
     //    chk.onclick=(function() { return function(){ Validate(); }})();

     //    cell2 = newRow.insertCell(1);
     //    cell2.appendChild(chk);

     //    var spcls = document.createElement("span");
     //    spcls.innerText =data.Name;
     //    cell3 = newRow.insertCell(2);
     //    cell3.appendChild(spcls);
     //}
      function insertintotbltea(data){
         var tblbdy = document.getElementById("bodyteacher");
         var rowIndex= tblbdy.rows.length;
         var newRow = tblbdy.insertRow(rowIndex);
         cell1 = newRow.insertCell(0);
         cell1.innerHTML = data.Id;
         cell1.style.display="none";


         var chk = document.createElement("input");
         chk.type="checkbox";
         chk.id="ClsIsSelected";
         chk.className="form-check-input";
         chk.checked=data.IsSelected;
         chk.onclick=(function() { return function(){ Validate(); }})();

         cell2 = newRow.insertCell(1);
         cell2.appendChild(chk);

         var spcls = document.createElement("span");
         spcls.innerText =data.FullName;
         cell3 = newRow.insertCell(2);
         cell3.appendChild(spcls);
     }
     function insertintotbl(data){
         var tblbdy = document.getElementById("datebody");
         var rowIndex= tblbdy.rows.length;
         var newRow = tblbdy.insertRow(rowIndex);

         var chk = document.createElement("input");
         chk.type="checkbox";
         chk.className="form-check-input";
         chk.checked = data.isSelected;
         chk.style.borderColor=data.dateColor;
         chk.onclick=(function() { return function(){ Validate(); }})();

          cell1 = newRow.insertCell(0);
         cell1.appendChild(chk);

         var spcls = document.createElement("span");
         spcls.innerHTML =data.examDate;
         spcls.style.color = data.dateColor;

         cell2 = newRow.insertCell(1);
         cell2.appendChild(spcls);

         var sp = document.createElement("span");
         sp.innerHTML =data.comment;
         sp.style.color = data.dateColor;
         cell3 = newRow.insertCell(2);
         cell3.appendChild(sp);

     }
     function chkFields(){
         var isvalid=true;
            if($("#title").val() == ""){
                isvalid =false;
         }
         if($("#ddlexamtype").val() == ""){
                 isvalid =false;
         }
         if($("#examcount").val() == ""){
                 isvalid =false;
         }
         if($("#startdate").val() === ""){
                 isvalid =false;
         }
         if($("#enddate").val() === ""){
                 isvalid =false;
         }
         if($("#experday").val() == "-1"){
                 isvalid =false;
         }
         var lstDate = getDateArray();
        var found = lstDate.some(el => el.IsSelected == true);
        if(!found){
            isvalid =false;
        }
        var lstTime = getTimeArray();
        var found1 = lstTime.some(el => el.IsSelected == true);
        if(!found1){
           isvalid =false;
        }
        var lstClass = getClassArray();
        var found2 = lstClass.some(el => el.IsSelected == true);
        if(!found2){
            isvalid =false;
        }
        //var lstSection = getSectionArray();
        //var found3 = lstSection.some(el => el.IsSelected == true);
        //if(!found3){
        //    isvalid =false;
        //}
        var lstTeacher = getTeacherArray();
        var found4 = lstTeacher.some(el => el.IsSelected == true);
        if(!found4){
            isvalid =false;
        }
        return isvalid;
     }
     function Validate(){
         if (chkFields()){
             $('#btnsubmit').prop('disabled', false);
         }
         else{
             $('#btnsubmit').prop('disabled', true);
         }

     }
     function getTimeCount(){
         var lstTime = getTimeArray();
         var count = lstTime.filter((obj) => obj.IsSelected == true).length;
         $("#examcount").val(count);
         Validate();
     }
     function selectedExamTypeIndexChanged(){
         Validate();
     }
     // function selectedBranchIndexChanged(){
     //     if($("#ddlbranch").val() != ""){
     //         getScheduleClassAndSectionByBranch();
     //     }
     //     else{
     //         $("#bodyclass").empty();
     //         $("#bodysection").empty();
     //         $("#bodyteacher").empty();

     //         $("#divclssec").hide();
     //     }
     // }
     function getScheduleClassAndSectionByBranch(){
         $("#loaderDiv1").show();
             $.ajax({
                     type: "post",
                     async : false,
                     url: '@Url.Action("GetScheduleClassAndSectionByBranch","Schedule")',
            data: { scheduleId: $("#hfscheduleid").val() > 0 ? $("#hfscheduleid").val() : 0 },  //Id: $("#ddlbranch").val(),
            dataType: 'json',
                     traditional: true,
                     success: function (response) {
                         if (response != null) {     
                             
                             var result = response;                           
                             $("#divclssec").show();
                        var clsArray=[];
                             $("#bodysection").empty();
                             $("#bodyclass").empty();
                             $("#bodyteacher").empty();
                             var jsonclsData = JSON.parse(result.strClass);
                             for (var j = 0; j < jsonclsData.length; j++){
                             clsArray.push(jsonclsData[j]);
                         }
                         if(clsArray.length > 0){
                                 for (var j = 0; j < clsArray.length; j++){
                                 insertintotblcls(clsArray[j]);

                             }
                         }

                        //var secArray=[];
                        //     var jsonsecData = JSON.parse(result.strSection);
                        // for (var j = 0; j < jsonsecData.length; j++){
                        //     secArray.push(jsonsecData[j]);
                        // }

                         //if(secArray.length > 0){
                         //        for (var j = 0; j < secArray.length; j++){
                         //            insertintotblsec(secArray[j]);
                         //    }
                         //}


                         var teaArray=[];
                             var jsonteaData = JSON.parse(result.strTeacher);
                         for (var j = 0; j < jsonteaData.length; j++){
                             teaArray.push(jsonteaData[j]);
                         }

                         if(teaArray.length > 0){
                                 for (var j = 0; j < teaArray.length; j++){
                                     insertintotbltea(teaArray[j]);
                             }
                         }
                             $("#loaderDiv1").hide();
                         }else {
                             toastr.error(`@_localization.Getkey("Error")"`);
                         }
                     },
                     error: function (response) {
                             toastr.error(`@_localization.Getkey("Error")`);
                     }
                 });
                 Validate();
     }
     
     function submitSchedule(){
          var objdata = getScheduleObject();
         
         if($("#hfscheduleid").val() == 0 || $("#hfscheduleid").val() == ""){
             saveSchedule(objdata);
         }
         else{
             updateSchedule(objdata);
         }

     }
     function getScheduleObject(){
         var lstDate = getDateArray();
             var lstTime = getTimeArray();
             var lstClass = getClassArray();
            // var lstSection = getSectionArray();
             var lstTeacher = getTeacherArray();

             var obj={};
             if($("#hfscheduleid").val() == 0 || $("#hfscheduleid").val() == ""){
                 obj.Id=0;
             }
             else{
                  obj.Id=$('#hfscheduleid').val();
             }

            obj.BranchId = 0;  //$('#ddlbranch').val();
             obj.Title=$('#title').val();
             obj.ExamTypeId=$('#ddlexamtype').val();
             obj.ExamCount=$('#examcount').val();
             obj.StartDate=$('#startdate').val();
             obj.EndDate=$('#enddate').val();
             obj.Description=$('#description').val();

             obj.LstStrDate = lstDate;
             obj.LstExamTime = lstTime;
             obj.LstScheduleClass = lstClass;
            // obj.LstScheduleSections = lstSection;
             obj.LstScheduleTeachers = lstTeacher;
             return obj;
     }
     function saveSchedule(objData){
         $("#loaderDiv1").show();
         var jdata = JSON.stringify(objData);
       
                 $.ajax({
                 type: 'POST',
                     url: '@Url.Action("Save","Schedule")',
                     dataType: "JSON",
                 data: {model :jdata },
                 success: function (response) {
                     if (response != null) {
                         var result = response;
                             toastr.success(`@_localization.Getkey("Saved")`);
                                 setProgress(1);

                                 $("#divschedule").hide("slow", function() {

                                     setScheduleData(result);
                                      getBranchClassSubjectBySchedule();
                                      getScheduleStatus();
                                   });

                         } else {
                                 toastr.error(`@_localization.Getkey("Error")`);
                         }
                 },
                 error: function (response) {
                             toastr.error(`@_localization.Getkey("Error")`);

                 }
             })
     }
     function updateSchedule(objData){
         bootbox.confirm({
             message: `@_localization.Getkey("AllDataDeleted")`,
             buttons: {
                 confirm: {
                     label: 'Yes',
                     className: 'btn-success'
                 },
                 cancel: {
                     label: 'No',
                     className: 'btn-danger'
                 }
             },
             callback: function (result) {
                 if (result) {

                      $("#loaderDiv1").show();
                     var jdata = JSON.stringify(objData);
                         $.ajax({
                         type: 'POST',
                             url: '@Url.Action("Save","Schedule")',
                             dataType: "JSON",
                         data: {model :jdata },
                         success: function (response) {
                             if (response != null) {
                                 var result = response;
                                     toastr.success(`@_localization.Getkey("Updated")`);
                                         setProgress(1);
                                         $("#divschedule").hide("slow", function() {
                                             getScheduleStatus();
                                             setScheduleData(result);

                                              getBranchClassSubjectBySchedule();
                                         });

                                 } else {
                                         toastr.error(`@_localization.Getkey("Error")`);
                                 }
                         },
                         error: function (response) {
                                     toastr.error(`@_localization.Getkey("Error")`);

                         }
                     })
                 }

             }
         });
     }
     function setProgress(val){
         var prval= val > 6 ? 6 : val
         var pr = Math.floor((prval/6)*100);
         var per = pr.toString();

            $("#divprogstudent").removeClass("step-item current");
             $("#divprogstudent").addClass("step-item");

              $("#divprogteacher").removeClass("step-item current");
             $("#divprogteacher").addClass("step-item");

              $("#divprogtimetable").removeClass("step-item current");
             $("#divprogtimetable").addClass("step-item");

             $("#divprogsubject").removeClass("step-item current");
             $("#divprogsubject").addClass("step-item");

              $("#divprogschedule").removeClass("step-item current");
             $("#divprogschedule").addClass("step-item");

              $("#divprogstart").removeClass("step-item current");
             $("#divprogstart").addClass("step-item");

         if(val==1){
             //$("#divprogstart").removeClass("step-item current");
             //$("#divprogstart").addClass("step-item");
              $('#spprogstart').attr("data-bs-container","#tooltip-container");
              $('#spprogstart').attr("data-bs-toggle","tooltip");
              $('#spprogstart').attr("data-bs-placement","bottom");

             $("#divprogschedule").removeClass("step-item");
             $("#divprogschedule").addClass("step-item current");

         }
         if(val==2){
             //$("#divprogschedule").removeClass("step-item current");
             //$("#divprogschedule").addClass("step-item");

             // $("#divprogstart").removeClass("step-item current");
             //$("#divprogstart").addClass("step-item");
             //$('#spprogstart').attr("data-bs-container","#tooltip-container");
             // $('#spprogstart').attr("data-bs-toggle","tooltip");
             // $('#spprogstart').attr("data-bs-placement","bottom");

               $('#spprogschedule').attr("data-bs-container","#tooltip-container");
              $('#spprogschedule').attr("data-bs-toggle","tooltip");
              $('#spprogschedule').attr("data-bs-placement","bottom");

             $("#divprogsubject").removeClass("step-item");
             $("#divprogsubject").addClass("step-item current");

         }
         if(val==3){
             //$("#divprogsubject").removeClass("step-item current");
             //$("#divprogsubject").addClass("step-item");

             // $("#divprogschedule").removeClass("step-item current");
             //$("#divprogschedule").addClass("step-item");

             // $("#divprogstart").removeClass("step-item current");
             //$("#divprogstart").addClass("step-item");


               $('#spprogsubject').attr("data-bs-container","#tooltip-container");
              $('#spprogsubject').attr("data-bs-toggle","tooltip");
              $('#spprogsubject').attr("data-bs-placement","bottom");

             $("#divprogtimetable").removeClass("step-item");
             $("#divprogtimetable").addClass("step-item current");

         }
         if(val==4){
             // $("#divprogtimetable").removeClass("step-item current");
             //$("#divprogtimetable").addClass("step-item");

             //$("#divprogsubject").removeClass("step-item current");
             //$("#divprogsubject").addClass("step-item");

             // $("#divprogschedule").removeClass("step-item current");
             //$("#divprogschedule").addClass("step-item");

             // $("#divprogstart").removeClass("step-item current");
             //$("#divprogstart").addClass("step-item");


               $('#spprogtimetable').attr("data-bs-container","#tooltip-container");
              $('#spprogtimetable').attr("data-bs-toggle","tooltip");
              $('#spprogtimetable').attr("data-bs-placement","bottom");

             $("#divprogteacher").removeClass("step-item");
             $("#divprogteacher").addClass("step-item current");

         }
         if(val==5){

             // $("#divprogteacher").removeClass("step-item current");
             //$("#divprogteacher").addClass("step-item");

             // $("#divprogtimetable").removeClass("step-item current");
             //$("#divprogtimetable").addClass("step-item");

             //$("#divprogsubject").removeClass("step-item current");
             //$("#divprogsubject").addClass("step-item");

             // $("#divprogschedule").removeClass("step-item current");
             //$("#divprogschedule").addClass("step-item");

             // $("#divprogstart").removeClass("step-item current");
             //$("#divprogstart").addClass("step-item");


               $('#spprogteacher').attr("data-bs-container","#tooltip-container");
              $('#spprogteacher').attr("data-bs-toggle","tooltip");
              $('#spprogteacher').attr("data-bs-placement","bottom");

             $("#divprogstudent").removeClass("step-item");
             $("#divprogstudent").addClass("step-item current");

         }
         if(val==6){
             // $("#divprogstudent").removeClass("step-item current");
             //$("#divprogstudent").addClass("step-item");

             // $("#divprogteacher").removeClass("step-item current");
             //$("#divprogteacher").addClass("step-item");

             // $("#divprogtimetable").removeClass("step-item current");
             //$("#divprogtimetable").addClass("step-item");

             //$("#divprogsubject").removeClass("step-item current");
             //$("#divprogsubject").addClass("step-item");

             // $("#divprogschedule").removeClass("step-item current");
             //$("#divprogschedule").addClass("step-item");

             // $("#divprogstart").removeClass("step-item current");
             //$("#divprogstart").addClass("step-item");


               $('#spprogstudent').attr("data-bs-container","#tooltip-container");
              $('#spprogstudent').attr("data-bs-toggle","tooltip");
              $('#spprogstudent').attr("data-bs-placement","bottom");

             $("#divprogfinish").removeClass("step-item");
             $("#divprogfinish").addClass("step-item current");

         }
         $("#divprocessline").width(per+'%');
     }
     function getScheduleStatus(){
         $.ajax({
                 type: "post",
                 async : false,
                 url: '@Url.Action("GetScheduleStatus","Schedule")',
                 data: {scheduleId : $("#hfscheduleid").val() },
                     dataType: 'json',
                 traditional: true,
                 success: function (response) {
                     if (response != null) {
                         
                         var result = response;
                         $("#hfstatusid").val(result);
                         setvisibility(result);
                     }
                 },
                 error: function (response) {
                            toastr.error(`@_localization.Getkey("Error")`);
                 }
             });
     }
     function setvisibility(statusId){

                $("#btnsubmit").html(`@_localization.Getkey("Save")`);
                $("#btnsubmitsubject").html(`@_localization.Getkey("Save")`);
                 $("#btnsubmittimetbl").html(`@_localization.Getkey("Save")`);
                  $("#btnsubmitteacher").html(`@_localization.Getkey("Save")`);
                   $("#btnsubmitstudent").html(`@_localization.Getkey("Save")`);

                $("#btnschednxt").hide();
                $("#btnsubjprev").hide();
                $("#btnsubjnxt").hide();
                $("#btntimetblprev").hide();
                $("#btntimetblnxt").hide();
                $("#btnteachprev").hide();
                $("#btnteachnxt").hide();
                $("#btnstudprev").hide();
                $("#btnstudnxt").hide();

         switch(statusId){
             case 1:
                $("#btnsubmit").html(`@_localization.Getkey("Update")`);
                $("#btnsubjprev").show();
               // $("#btnschednxt").show();
             break;
             case 2:
                $("#btnsubmit").html(`@_localization.Getkey("Update")`);
                $("#btnsubmitsubject").html(`@_localization.Getkey("Update")`);

                $("#btnschednxt").show();
                $("#btnsubjprev").show();
                $("#btntimetblprev").show();
             break;
             case 3:
                $("#btnsubmit").html(`@_localization.Getkey("Update")`);
                $("#btnsubmitsubject").html(`@_localization.Getkey("Update")`);
                 $("#btnsubmittimetbl").html(`@_localization.Getkey("Update")`);

                $("#btnschednxt").show();
                $("#btnsubjprev").show();
                $("#btnsubjnxt").show();
                $("#btntimetblprev").show();
                $("#btnteachprev").show();
             break;
              case 4:
                $("#btnsubmit").html(`@_localization.Getkey("Update")`);
                $("#btnsubmitsubject").html(`@_localization.Getkey("Update")`);
                 $("#btnsubmittimetbl").html(`@_localization.Getkey("Update")`);
                  $("#btnsubmitteacher").html(`@_localization.Getkey("Update")`);

                $("#btnschednxt").show();
                $("#btnsubjprev").show();
                $("#btnsubjnxt").show();
                $("#btntimetblprev").show();
                $("#btntimetblnxt").show();
                $("#btnteachprev").show();
                $("#btnstudprev").show();
             break;
             case 5:
              $("#btnsubmit").html(`@_localization.Getkey("Update")`);
                $("#btnsubmitsubject").html(`@_localization.Getkey("Update")`);
                 $("#btnsubmittimetbl").html(`@_localization.Getkey("Update")`);
                  $("#btnsubmitteacher").html(`@_localization.Getkey("Update")`);
                   $("#btnsubmitstudent").html(`@_localization.Getkey("Update")`);

                $("#btnschednxt").show();
                $("#btnsubjprev").show();
                $("#btnsubjnxt").show();
                $("#btntimetblprev").show();
                $("#btntimetblnxt").show();
                $("#btnteachprev").show();
                $("#btnteachnxt").show();
                $("#btnstudprev").show();


                $("#divaftercomplete").hide("slow", function() {
                    $("#btnaftercomprev").hide();

                    $("#divbeforecomplete").show();
                    $("#btnbeforecomprev").show();
                });



             break;
              case 6:
               $("#btnsubmit").html(`@_localization.Getkey("Update")`);
                $("#btnsubmitsubject").html(`@_localization.Getkey("Update")`);
                 $("#btnsubmittimetbl").html(`@_localization.Getkey("Update")`);
                  $("#btnsubmitteacher").html(`@_localization.Getkey("Update")`);
                   $("#btnsubmitstudent").html(`@_localization.Getkey("Update")`);

                $("#btnschednxt").show();
                $("#btnsubjprev").show();
                $("#btnsubjnxt").show();
                $("#btntimetblprev").show();
                $("#btntimetblnxt").show();
                $("#btnteachprev").show();
                $("#btnteachnxt").show();
                $("#btnstudprev").show();
                $("#btnstudnxt").show();


                 $("#divbeforecomplete").hide("slow", function() {
                    $("#btnbeforecomprev").hide();

                    $("#divaftercomplete").show();
                    $("#btnaftercomprev").show();
                });
             break;
         }
     }
     function setScheduleData(data){
         try{
             $("#divschedulebar").show();
           
             if($("#hfscheduleid").val()=="" || $("#hfscheduleid").val() ==0){
                 $("#hfscheduleid").val(data);
             }

             $("#lbltitle").html($("#title").val());
             $("#lblexamtype").html($("#ddlexamtype option:selected").text());
             $("#lblstartdate").html($("#startdate").val());
             $("#lblenddate").html($("#enddate").val());

         }
         catch(error){
             
         }

     }
      function getBranchClassSubjectBySchedule(){
             $.ajax({
                 type: "post",
                 async : false,
                 url: '@Url.Action("GetBranchClassSubjectBySchedule","Schedule")',
                 data: {scheduleId : $("#hfscheduleid").val() },
                     dataType: 'json',
                 traditional: true,
                 success: function (response) {
                     if (response != null) {                         
                         var result = response;
                         var preResultArray=[];
                         var postResultArray=[];
                         $("#divclassubj").show();
                         if (result.PostResult == ""){

                         }
                         else{
                             var jsonpostData = JSON.parse(result.postResult);
                             postResultArray.push(jsonpostData);
                         }
                         var jsonpreData = JSON.parse(result.preResult);
                         preResultArray.push(jsonpreData);
                         if(preResultArray[0].length > 0){
                             onLoadSubjectData(preResultArray,postResultArray);
                         }
                     }
                 },
                 error: function (response) {
                             toastr.error(`@_localization.Getkey("Error")`);
                 }
             });
      }
      function onLoadSubjectData(predata,postdata){

                 var subjcolumns=[];
                 presubjcolumns=[];
                 var rowData = predata[0];
                 presubjcolumns=predata[0];

                     if(rowData.length > 0){
                         Object.keys(rowData[0]).forEach( function (key, index){
                         if (key == 'Id' || key == 'ClassName') {
                             subjcolumns.push({data: key,
                                             title: key,
                                         });

                         }
                     })
                 }
                 if(postdata[0].length == 0)  {
                     Object.keys(rowData[0]).forEach( function (key, index){
                             if (key == 'Id' || key == 'ClassName') {

                             }
                             else{
                                 subjcolumns.push( {data: rowData[0][key],
                                         title: key,
                                         render: function (data, type, row) {
                                              return '<div class="form-check form-check-inline"> '+
                                                         ' <input class="form-check-input" type="checkbox" name="subjectcheck" checked=checked> '+
                                                           '  <label class="form-check-label" for="inlineCheckbox1">Marks</label>' +
                                                         ' <input type="text" class="form-control form-control-sm" name="subjectmark" style="width:80px" maxlength="3" pattern="\d{1,5}">'+
                                                         '</div>';
                                             }
                                     });
                             }
                     })

                 }
                 else if(postdata[0].length > 0){

                    var postrowData = postdata[0];
                        Object.keys(postrowData[0]).forEach( function (key, index){
                        if (key == 'Id' || key == 'ClassName') {

                        }
                        else{
                            subjcolumns.push( {data: postrowData[0][key],
                                    title: key,                                                                                                                                                                                                                     
                                    render: function (data, type, row) {

                                            if(row[key] == null){
                                                return '<input type="checkbox"  class="form-check-input" style="width:50px" maxlength="3" pattern="[0-9]{1,5}">';
                                            }
                                            else{
                                                 //return '<input type="checkbox"  class="form-check-input"  checked=checked><input type="text" class="form-control form-control-sm">';
                                                 return '<div class="form-inline"> '+
                                                         ' <input class="form-check-input" type="checkbox" name="subjectcheck" checked=checked> '+
                                                         '  <label class="form-check-label" for="inlineCheckbox1">Marks</label>' +
                                                         ' <input type="text" class="form-control form-control-sm" name="subjectmark" style="width:80px" maxlength="3" pattern="\d{1,5}">'+
                                                          '</div>';
                                            }

                                        }
                                });
                        }
                    })
                 }
                 $("#tblschedsubject").DataTable({
                 "bDestroy": true,
                 data : postdata[0].length == 0 ? predata[0] : postdata[0],
                 "aoColumnDefs": [{ "bVisible": false, "aTargets": [0] }],
                 columns: subjcolumns,
                     "searching": false,
                 "bLengthChange": false,
                 paging: false,
                 "info": false,
                 "ordering": false
         })
         $("#loaderDiv1").hide();

      }
     function getClassSubjectArray(){
             var lstschedsub = new Array();
             var tbldata = $("#tblschedsubject").DataTable();
             jQuery(tbldata.rows().nodes()).each(function (item) {
                 var tr =this;
                 var tblFirstCol = tbldata.row(tr).data();
                 $(this).find('div').each (function(cellindex) {

                    // var ischecked =$(this).is(':checked');
                     //var ischecked = $("input[name='subjectcheck']:checked"); //$(this).is(':checked'); //$('[name="subjectcheck"]:checked').val(); 
                     var ischecked = $('[name=subjectcheck]:checked').val(); 
                     var markCol = $('input[name=subjectmark]').val();
                    // var markCol= $(this).find('input.form-control form-control-sm').val();
                   // console.log($("input[name='subjectcheck']:checked").val(),$('[name="subjectcheck"]:checked').val(),$(this).is(':checked'))
                     for(var i=0; i<presubjcolumns.length; i++){

                         var brclsid = parseInt(tblFirstCol.Id);
                         var brclsid2 = parseInt(presubjcolumns[i].Id);
                         if(brclsid == brclsid2){

                             Object.keys(presubjcolumns[i]).forEach( function (key, colindex){
                                 if(colindex >1){
                                     if(cellindex == colindex-2){
                                         var schedsub ={};
                                         schedsub.IsSelected = ischecked;
                                         schedsub.Marks = markCol;
                                         schedsub.ClassSubjectId=presubjcolumns[i][key];
                                         lstschedsub.push(schedsub);
                                     }
                                 }

                         })
                         }

                     }

                 });
             });

             return lstschedsub;
        }
        function submitSubject(){
            if($("#hfstatusid").val() == 1){
                saveSubject();
            }
            else if($("#hfstatusid").val() >= 2){
                updateSubject();
            }
        }


     function saveSubject(){
             $("#loaderDiv1").show();

             var lstresult = getClassSubjectArray();
             console.log(lstresult);
             //var obj={};
             //obj.scheduleId=$("#hfscheduleid").val();
             //obj.LstScheduleBranchClassSubject=lstresult;
             //var jdata = JSON.stringify(obj);
             //        $.ajax({
             //        type: 'POST',
             //            url: '@Url.Action("SaveScheduleBranchClassSubject","Schedule")',
             //            dataType: "JSON",
             //        data: {model :jdata },
             //        success: function (response) {
             //            if (response != null) {
             //                    toastr.success('Saved Succesfully');
             //                        setProgress(2);
             //                        $("#divclassubj").hide("slow", function() {
             //                               getScheduleStatus();
             //                                //setAlgoTimeTable();
             //                               getScheduleExamDateTime();
             //                         });
             //                } else {
             //                        toastr.error(`@_localization.Getkey("Error")`);
             //                }
             //        },
             //        error: function (response) {
             //                    toastr.error(`@_localization.Getkey("Error")`);

             //        }
             //    })
     }
     function updateSubject(){
             bootbox.confirm({
             message: 'All the schedule data will be deleted ! Do you want to Proceed ?',
             buttons: {
                 confirm: {
                     label: 'Yes',
                     className: 'btn-success'
                 },
                 cancel: {
                     label: 'No',
                     className: 'btn-danger'
                 }
             },
             callback: function (result) {
                 if (result) {

                      $("#loaderDiv1").show();
                     var lstresult = getClassSubjectArray();
                     var obj={};
                     obj.scheduleId=$("#hfscheduleid").val();
                     obj.LstScheduleBranchClassSubject=lstresult;
                     var jdata = JSON.stringify(obj);
                             $.ajax({
                             type: 'POST',
                                 url: '@Url.Action("SaveScheduleBranchClassSubject","Schedule")',
                                 dataType: "JSON",
                             data: {model :jdata },
                             success: function (response) {
                                 if (response != null && response > 0) {
                                         toastr.success('Updated Succesfully');
                                             setProgress(2);
                                             $("#divclassubj").hide("slow", function() {
                                                 getScheduleStatus();
                                                    // setAlgoTimeTable();
                                                    getScheduleExamDateTime();
                                              });


                                     } else {
                                             toastr.error(`@_localization.Getkey("Error")`);
                                     }
                             },
                             error: function (response) {
                                                                        toastr.error(`@_localization.Getkey("Error")`);

                             }
                         })
                 }

             }
         });
        }
     function setAlgoTimeTable(){
             $("#loaderDiv1").show();
             $.ajax({
                     type: "POST",
                     async : false,
                     url: '@Url.Action("SaveScheduleExamAlgo","Schedule")',
                     data: { scheduleId: $("#hfscheduleid").val() },
                     dataType: 'json',
                     traditional: true,
                     success: function (response) {
                         if(response != null && response > 0){
                             getPivotTimeTable();
                         }
                         else {
                             toastr.error(`@_localization.Getkey("Error")`);
                         }
                     },
                     error: function (response) {
                             toastr.error(`@_localization.Getkey("Error")`);
                     }
                 });
     }
     function getPivotTimeTable(){
             $("#loaderDiv1").show();
             $.ajax({
                     type: "POST",
                     async : false,
                     url: '@Url.Action("GetPivotTimeTable","Schedule")',
                     data: { scheduleId: $("#hfscheduleid").val() },
                     dataType: 'json',
                     traditional: true,
                     success: function (response) {
                         if(response != null){
                             
                             var jsonData = JSON.parse(response.strResult);

                             $("#divtimetable").show("slow", function() {
                                     fillPivotTimeTable(jsonData);
                                     fillTimeTable();
                             });

                         }
                         else {
                             toastr.error(`@_localization.Getkey("Error")`);
                         }
                     },
                     error: function (response) {
                             toastr.error(`@_localization.Getkey("Error")`);
                     }
                 });
     }

     function fillPivotTimeTable(data){
         var columns=[];

             var rowData = data[0];
                 Object.keys(rowData).forEach( function (key, index){
                 columns.push({data: key,
                                     title: key,
                                 });
             })
             $("#tbltimetable").DataTable({
                 "bDestroy": true,
                 "searching": false,
                 "bLengthChange": false,
                 paging: false,
                 "info": false,
                 "ordering": false,
                 data : data,
                 "aoColumnDefs": [{ "bVisible": false, "aTargets": [0] }],
                 columns: columns
                 //dom: 'Bfrtip'
             })
             $("#loaderDiv1").hide();

    }
     function fillTimeTable(){

         $("#loaderDiv1").show();
         $.ajax({
                 type: "POST",
                 async : false,
                 url: '@Url.Action("GetScheduleBranchClassExam","Schedule")',
                 data: { scheduleId: $("#hfscheduleid").val() },
                 dataType: 'json',
                 traditional: true,
                 success: function (response) {
                     
                     if(response != null){
                         $("#divtimetable").show();
                         setlstbrclsExamArray(response);
                         $("#ulTimeTbl").empty();
                         var litime=[];
                         for(var i=0; i<response.length; i++){
                             var item = setLiBrclsTimeTbl(response[i]);
                             litime.push(item);
                             //$("#ulTimeTbl").append(item);
                         }
                         $("#ulTimeTbl").html(litime);
                         $("#loaderDiv1").hide();
                     }
                     else {

                        toastr.error(`@_localization.Getkey("Error")`);
                     }
                 },
                 error: function (response) {
                         toastr.error(`@_localization.Getkey("Error")`);
                 }
             });
    }
    function setLiBrclsTimeTbl(data){
         var li=document.createElement('li');
         li.className ="list-group-item";

         var sp=document.createElement('span');
         sp.innerHTML = data.className;

         var div=document.createElement('div');
         div.className="bg-primary p-2 text-white bg-opacity-75";

         var hidd = document.createElement("input");
         hidd.type="hidden";
         hidd.value=data.id;

         div.appendChild(sp);
         li.appendChild(div);
         li.appendChild(hidd);

         if(data.lstClassSubject.length > 0){
             var ul = document.createElement('ul');
             ul.className="list-group list-group-horizontal";
             for (let i = 0; i < data.lstClassSubject.length; i++){
                 var li2=document.createElement('li');
                 li2.className ="list-group-item";

                 var div=document.createElement('div');
                 div.className="row row-cols-lg-auto g-1 align-items-center";

                 var hidd = document.createElement("input");
                 hidd.type="hidden";
                 hidd.value=data.lstClassSubject[i].id;

                 var sp2=document.createElement('span');
                 sp2.innerHTML = '&nbsp;' + data.lstClassSubject[i].subjectName;


                 //li2.appendChild(sp2);
                 //li2.appendChild(hidd);
                 div.appendChild(sp2);
                 div.appendChild(hidd);

                 //for examdate select element
                 if(data.lstClassSubject[i].examDateSheet !== null){
                     if(data.lstClassSubject[i].examDateSheet.length > 0){

                     var selectdt = document.createElement("select");
                     selectdt.id="exdt"+data.lstClassSubject[i].id;
                     selectdt.className = "form-select form-select-sm";
                     selectdt.onchange =  (function(select) { return function(){ SelectedExamDateChanged(select); }})(selectdt);
                         var optiondt;
                         optiondt = document.createElement("option");
                         optiondt.setAttribute("value", "-1");
                         optiondt.innerHTML = "Please Select Exam Date";
                         selectdt.appendChild(optiondt);

                         for(var j=0; j<data.lstClassSubject[i].examDateSheet.length; j++){
                             optiondt = document.createElement("option");
                                 optiondt.setAttribute("value", data.lstClassSubject[i].examDateSheet[j].value);
                                 optiondt.innerHTML = data.lstClassSubject[i].examDateSheet[j].text;
                             selectdt.appendChild(optiondt);
                         }
                         selectdt.value=data.lstClassSubject[i].strExamDate;
                         //li2.appendChild(selectdt);
                         div.appendChild(selectdt);

                     }
                 }

                 //for examtime from select element
                 if(data.lstClassSubject[i].examTimeSheet !== null){
                     if(data.lstClassSubject[i].examTimeSheet.length > 0){

                     var selectfrm = document.createElement("select");
                         selectfrm.id="exfrm"+data.lstClassSubject[i].id;
                     selectfrm.className = "form-select form-select-sm";
                         selectfrm.onchange =  (function(select) { return function(){ SelectedTimeFromChanged(select); }})(selectfrm);
                         var optionfrm;
                         optionfrm = document.createElement("option");
                         optionfrm.setAttribute("value", "-1");
                         optionfrm.innerHTML = "Please Select Exam Time";
                         selectfrm.appendChild(optionfrm);

                         for(var j=0; j<data.lstClassSubject[i].examTimeSheet.length; j++){
                             optionfrm = document.createElement("option");
                                 optionfrm.setAttribute("value", data.lstClassSubject[i].examTimeSheet[j].value);
                                 optionfrm.innerHTML = data.lstClassSubject[i].examTimeSheet[j].text;
                             selectfrm.appendChild(optionfrm);
                         }
                         selectfrm.value=data.lstClassSubject[i].examTimeId;
                         // li2.appendChild(selectfrm);
                         div.appendChild(selectfrm);
                     }
                 }
                 li2.appendChild(div);
                 ul.appendChild(li2);
             }
             li.appendChild(ul);
         }
         return li;
     }
     function setlstbrclsExamArray(data){
         lstbrclsExam=[];
         for(var i=0; i<data.length; i++){
             var brcls={};
             brcls.Id =data[i].id;
             brcls.ClassName =data[i].className;
             brcls.LstClassSubject=[];
             for(var j=0; j<data[i].lstClassSubject.length; j++){
                 var clssubj={};
                 clssubj.Id =data[i].lstClassSubject[j].id;
                 clssubj.SubjectName =data[i].lstClassSubject[j].subjectName;
                 clssubj.StrExamDate =data[i].lstClassSubject[j].strExamDate;
                 clssubj.ExamTimeId =data[i].lstClassSubject[j].examTimeId;
                 brcls.LstClassSubject.push(clssubj);
             }
             lstbrclsExam.push(brcls);

         }

     }
     function SelectedExamDateChanged(select){
         setDateTimeExamArray('1', select);
     }
     function SelectedTimeFromChanged(select){
         setDateTimeExamArray('2', select);
     }

    function setDateTimeExamArray(type, select){

         var childitem = select.parentElement;
         var childid = childitem.getElementsByTagName('input')[0].value;

         var grandparentitem = select.parentElement.parentElement.parentElement;
         var grandparentid = grandparentitem.getElementsByTagName('input')[0].value;

         var grandparent =  lstbrclsExam.find(o => o.Id == grandparentid);
         var child = grandparent.LstClassSubject.find(o => o.Id == childid);

         if(type=="1"){
             child.StrExamDate = select.value;
         }
         if(type=="2"){
             child.ExamTimeId = select.value;
         }

     }
     function submitScheduleBranchClassExam(){
         $("#loaderDiv1").show();
         var obj={};
         obj.ScheduleId=$("#hfscheduleid").val();
         //obj.BranchId=$("#hfbranchid").val();
         obj.LstBranchClass=lstbrclsExam;
         var jdata = JSON.stringify(obj);
                 $.ajax({
                 type: 'POST',
                     url: '@Url.Action("SaveScheduleExam","Schedule")',
                     dataType: "JSON",
                 data: {model :jdata },
                 success: function (response) {
                     if (response != null && response > 0) {
                                 toastr.success('Saved Succesfully');
                                 getPivotTimeTable();

                         } else {
                                toastr.error(`@_localization.Getkey("Error")`);
                         }
                 },
                 error: function (response) {
                             toastr.error(`@_localization.Getkey("Error")`);

                 }
             })
     }
     function submitTimeTable(){
         if($("#hfstatusid").val() == 2){
             saveTimeTable();
         }
         else if($("#hfstatusid").val() == 3){
             updateTimeTable();
         }
     }
     function saveTimeTable(){
          $("#loaderDiv1").show();
           $.ajax({
                 type: "post",
                 async : false,
                 url: '@Url.Action("UpdateScheduleTimeTableStatus","Schedule")',
                 data: {scheduleId : $("#hfscheduleid").val() },
                 dataType: 'json',
                 traditional: true,
                 success: function (response) {
                     if(response != null){
                         toastr.success("Saved Successfully");
                         setProgress(3);
                         $("#divtimetable").hide("slow", function() {
                                getScheduleStatus();
                                    // setAlgoTeacher();
                                   getScheduleSection();
                          });

                     }
                 },
                 error: function (response) {
                            toastr.error(`@_localization.Getkey("Error")`);
                 }
             });
     }
     function updateTimeTable(){
          bootbox.confirm({
             message: 'All the Allocation Data will be deleted ! Do you want to Proceed ?',
             buttons: {
                 confirm: {
                     label: 'Yes',
                     className: 'btn-success'
                 },
                 cancel: {
                     label: 'No',
                     className: 'btn-danger'
                 }
             },
             callback: function (result) {
                 if (result) {
                      $("#loaderDiv1").show();
                            $.ajax({
                         type: "post",
                         async : false,
                         url: '@Url.Action("UpdateScheduleTimeTableStatus","Schedule")',
                         data: {scheduleId : $("#hfscheduleid").val() },
                         dataType: 'json',
                         traditional: true,
                         success: function (response) {
                             if(response != null){
                                 toastr.success(`@_localization.Getkey("Updated")`);
                                 setProgress(3);
                               $("#divtimetable").hide("slow", function() {
                                   getScheduleStatus();
                                    // setAlgoTeacher();
                                    getScheduleSection();
                                });
                             }
                         },
                         error: function (response) {
                                    toastr.error(`@_localization.Getkey("Error")`);
                         }
                     });
                 }

             }
         });
     }
     function submitTeacher(){
            saveTeacher();
     }
      function saveTeacher(){
          $("#loaderDiv1").show();
           $.ajax({
                 type: "post",
                 async : false,
                 url: '@Url.Action("UpdateScheduleTeacherStatus","Schedule")',
                 data: {scheduleId : $("#hfscheduleid").val() },
                 dataType: 'json',
                 traditional: true,
                 success: function (response) {
                     if(response != null){
                         toastr.success(`@_localization.Getkey("Saved")`);
                         setProgress(4);
                         $("#divteacher").hide("slow", function() {
                                    getScheduleStatus();
                                    setAlgoStudent();
                         });
                     }
                 },
                 error: function (response) {
                            toastr.error(`@_localization.Getkey("Error")`);
                 }
             });
     }
     function setAlgoTeacher(){
                $("#loaderDiv1").show();
                $.ajax({
                        type: "POST",
                        async : false,
                        url: '@Url.Action("SaveScheduleTeacherExamDateAlgo","Schedule")',
                        data: { scheduleId: $("#hfscheduleid").val()},
                        dataType: 'json',
                        traditional: true,
                        success: function (response) {
                            if(response != null && response > 0){
                                getPivotTeacher();
                            }
                            else {
                               toastr.error(`@_localization.Getkey("Error")`);
                            }
                        },
                        error: function (response) {

                               toastr.error(`@_localization.Getkey("Error")`);
                        }
                    });
     }
    function getPivotTeacher(){
                    $("#loaderDiv1").show();
                    $.ajax({
                            type: "POST",
                            async : false,
                            url: '@Url.Action("GetPivotScheduleTeacher","Schedule")',
                            data: { scheduleId: $("#hfscheduleid").val() },
                            dataType: 'json',
                            traditional: true,
                            success: function (response) {
                                
                                if(response != null){
                                    var jsonData = JSON.parse(response.strResult);

                                     $("#divteacher").show("slow", function() {

                                         fillPivotTeacher(jsonData);
                                            fillTeacher();
                                        });


                                }
                                else {
                                   toastr.error(`@_localization.Getkey("Error")`);
                                }
                            },
                            error: function (response) {

                                   toastr.error(`@_localization.Getkey("Error")`);
                            }
                        });
    }
    function fillPivotTeacher(data){
        var tcolumns=[];
            //1.Get first row data to build columns from predata.
            var rowData = data[0];
                Object.keys(rowData).forEach( function (key, index){
                tcolumns.push({data: key,
                                    title: key,
                                });
            })
            $("#tblteacherresult").DataTable({
                "bDestroy": true,
                "searching": false,
                "bLengthChange": false,
                paging: false,
                "info": false,
                data : data,
                "aoColumnDefs": [{ "bVisible": false, "aTargets": [0] }],
                columns: tcolumns
                //dom: 'Bfrtip'
            })
            $("#loaderDiv1").hide();
    }
    function fillTeacher(){
        $("#loaderDiv1").show();
                    $.ajax({
                            type: "POST",
                            async : false,
                            url: '@Url.Action("GetScheduleTeacherExamDate","Schedule")',
                            data: { scheduleId: $("#hfscheduleid").val() },
                            dataType: 'json',
                            traditional: true,
                            success: function (response) {
                                
                                if(response != null){

                                    setlstTeacherArray(response);
                                    $("#ulTeacherTbl").empty();
                                    var liteach=[];
                                    for(var i=0; i<response.length; i++){
                                        var item = setLiTeacherTbl(response[i]);
                                        liteach.push(item);
                                       // $("#ulTeacherTbl").append(item);
                                    }
                                    $("#ulTeacherTbl").html(liteach);
                                    $("#loaderDiv1").hide();
                                }
                                else {
                                    toastr.error(`@_localization.Getkey("Error")`);

                                }
                            },
                            error: function (response) {

                                   toastr.error(`@_localization.Getkey("Error")`);

                            }
                        });
    }
    function setlstTeacherArray(data){
            lstTeacherExam=[];
            for(var i=0; i<data.length; i++){
                var brcls={};
                brcls.Id =data[i].id;
                brcls.StrExamDate =data[i].strExamDate;
                brcls.ExamDay =data[i].examDay;
                brcls.LstTeacher=[];
                for(var j=0; j<data[i].lstTeacher.length; j++){
                    var clssubj={};
                    clssubj.Id =data[i].lstTeacher[j].id;
                    clssubj.FullName =data[i].lstTeacher[j].fullName;
                    clssubj.ScheduleSectionId =data[i].lstTeacher[j].scheduleSectionId;
                    brcls.LstTeacher.push(clssubj);
                }
                lstTeacherExam.push(brcls);
            }
     }
    function setLiTeacherTbl(data){
                    var li=document.createElement('li');
                    li.className ="list-group-item";

                    var sp=document.createElement('span');
                    sp.innerHTML = data.strExamDate;

                    var div=document.createElement('div');
                    div.className="bg-primary p-2 text-white bg-opacity-75";

                    var hidd = document.createElement("input");
                    hidd.type="hidden";
                    hidd.value=data.id;


                    div.appendChild(sp);
                    li.appendChild(div);
                    li.appendChild(hidd);

                    if(data.lstTeacher.length > 0){
                        var ul = document.createElement('ul');
                        ul.className="list-group list-group-horizontal";
                        for (let i = 0; i < data.lstTeacher.length; i++){
                            var li2=document.createElement('li');
                            li2.className ="list-group-item";

                            var hidd = document.createElement("input");
                            hidd.type="hidden";
                            hidd.value=data.lstTeacher[i].teacherId;

                            var sp2=document.createElement('span');
                            sp2.innerHTML = '&nbsp;' + data.lstTeacher[i].teacherName;

                            // li2.appendChild(chk);
                            li2.appendChild(sp2);
                            li2.appendChild(hidd);

                            //for examdate select element
                            if(data.lstTeacher[i].scheduleSectionSheet !== null){
                                if(data.lstTeacher[i].scheduleSectionSheet.length > 0){

                                var selectdt = document.createElement("select");
                                selectdt.id="exdt"+data.lstTeacher[i].teacherId;
                                selectdt.className = "form-select form-select-sm";
                                selectdt.onchange =  (function(select) { return function(){ SelectedTeacherExamDateChanged(select); }})(selectdt);
                                    var optiondt;
                                    optiondt = document.createElement("option");
                                    optiondt.setAttribute("value", "-1");
                                    optiondt.innerHTML = "Please Select Exam Date";
                                    selectdt.appendChild(optiondt);

                                    for(var j=0; j<data.lstTeacher[i].scheduleSectionSheet.length; j++){
                                        optiondt = document.createElement("option");
                                            optiondt.setAttribute("value", data.lstTeacher[i].scheduleSectionSheet[j].value);
                                            optiondt.innerHTML = data.lstTeacher[i].scheduleSectionSheet[j].text;
                                        selectdt.appendChild(optiondt);
                                    }
                                    selectdt.value=data.lstTeacher[i].scheduleSectionId;
                                    li2.appendChild(selectdt);
                                }
                            }
                            ul.appendChild(li2);
                        }
                        li.appendChild(ul);
                    }
                    return li;
    }
    function submitScheduleTeacherExamDate(){
                      $("#loaderDiv1").show();
                      var obj={};
                      obj.ScheduleId=$("#hfscheduleid").val();

                      obj.LstScheduleExamDate=lstTeacherExam;
                      var jdata = JSON.stringify(obj);
                              $.ajax({
                              type: 'POST',
                                  url: '@Url.Action("SaveScheduleTeacherExamDate","Schedule")',
                                  dataType: "JSON",
                              data: {model :jdata },
                              success: function (response) {
                                  if (response != null && response > 0) {
                                              getPivotTeacher();

                                      } else {
                                             toastr.error(`@_localization.Getkey("Error")`);
                                      }
                              },
                              error: function (response) {
                                        toastr.error(`@_localization.Getkey("Error")`);

                              }
                          })
     }
     function SelectedTeacherExamDateChanged(select){
        var childitem = select.parentElement;
        var childid = childitem.getElementsByTagName('input')[0].value;

        var grandparentitem = select.parentElement.parentElement.parentElement;
        var grandparentid = grandparentitem.getElementsByTagName('input')[0].value;

        var grandparent =  lstTeacherExam.find(o => o.Id == grandparentid);
        var child = grandparent.LstTeacher.find(o => o.Id == childid);

        child.ScheduleSectionId = select.value;
      }




      function getSpScheduleTeacher(){

                $.ajax({
                        type: "post",
                        async : false,
                        url: '@Url.Action("GetSpScheduleTeacher","Schedule")',
                        data: { scheduleId : $("#hfscheduleid").val() },
                            dataType: 'json',
                        traditional: true,
                        success: function (response) {                           
                            var preResultArray=[];
                            var postResultArray=[];
                            if(response != null){
                               
                                var result = response;
                                 $("#divteacher").show("slow", function() {
                                     if (result.PostResult ==""){
                                        }
                                        else{
                                         var jsonpostData = JSON.parse(result.postResult);
                                            postResultArray.push(jsonpostData);
                                        }
                                     var jsonpreData = JSON.parse(result.preResult);
                                        preResultArray.push(jsonpreData);

                                        if(preResultArray[0].length > 0){
                                            onLoadTeacherData(preResultArray,postResultArray);
                                        }
                                  });


                            }
                        },
                        error: function (response) {
                           toastr.error(`@_localization.Getkey("Error")`);
                        }
                    });

    }
    function onLoadTeacherData(predata,postdata){

            columns = [];
            precolumns = [];
            //1.Get first row data to build columns from predata.
            var rowData = predata[0];
            if(rowData.length > 0){
                Object.keys(rowData[0]).forEach( function (key, index){
                if (key == 'TeacherId' || key == 'TeacherName') {

                    columns.push({data: key,
                                    title: key,
                                });
                                precolumns.push({data: key,
                                    title: key,
                                });

                }
                else{
                    var tmparray = key.split(',');

                    precolumns.push({data: rowData[0][key],
                                    title: tmparray[0],
                                });
                }
            })
            if(postdata[0].length == 0)  {
            Object.keys(rowData[0]).forEach( function (key, index){
                if (key == 'TeacherId' || key == 'TeacherName') {

                }
                else{
                    var tmparray1 = key.split(',');
                    lstSchedExamIds.push(tmparray1[1]);
                    columns.push( {data: rowData[0][key],
                            title: tmparray1[0],
                            render: function (data, type, row) {
                                return setScheduleTeacherDropdown(0);
                                //return '<input type="text"  class="form-control" required = "required" value="">';
                                }
                        });
                }
            })
            }
            else if(postdata[0].length > 0){
                var postrowData = postdata[0];
                Object.keys(postrowData[0]).forEach( function (key, index){
                if (key == 'TeacherId' || key == 'TeacherName') {

                }
                else{
                    var tmparray2 = key.split(',');
                    lstSchedExamIds.push(tmparray2[1]);
                    columns.push( {data: postrowData[0][key],
                            title: tmparray2[0],
                            render: function (data, type, row) {
                                if(row[key]==0){
                                   // return  '<input type="text"  class="form-control" required = "required" value="">';
                                    return setScheduleTeacherDropdown(0);
                                }
                                else{
                                     return setScheduleTeacherDropdown(row[key]);
                                   // return '<input type="text"  class="form-control" required = "required" value="'+row[key]+'">';
                                }

                                }
                        });
                }
            })
            }

                $("#tblteacherresult").DataTable({
                "bDestroy": true,
                data : postdata[0].length == 0 ? predata[0] : postdata[0],
                "aoColumnDefs": [{ "bVisible": false, "aTargets": [0] }],
                columns: columns,
                // dom: 'Bfrtip'
            })
            $("#loaderDiv1").hide();
            }
    }
    function submitScheduleTeacher(){
        var lstresult = getScheTeacherArray();
                var obj={};
                obj.ScheduleId=$("#hfscheduleid").val();
                obj.LstScheduleTeacherSection=lstresult;
                 var jdata = JSON.stringify(obj);
                 $.ajax({
                    type: 'POST',
                     url: '@Url.Action("SaveTeacherSection","Schedule")',
                     dataType: "JSON",
                    data: {model :jdata },
                    success: function (response) {
                        if (response != null) {
                             setProgress(4);

                                toastr.success('Saved Succesfully');
                                 $("#divteacher").hide("slow", function() {

                                        getScheduleStatus();
                                       // fillStudent();
                                       getSpScheduleStudent();
                                    });

                            } else {

                                toastr.error(`@_localization.Getkey("Error")`);
                            }
                    },
                    error: function (response) {

                             toastr.error(`@_localization.Getkey("Error")`);

                    }
                })
    }
    function getScheTeacherArray(){
        var lststdMark = new Array();

        var tbldata = $("#tblteacherresult").DataTable();
        jQuery(tbldata.rows().nodes()).each(function (item) {
            var tr =this;
            var tblFirstCol = tbldata.row(tr).data();

            $(this).find('select').each (function(cellindex) {
               //var objcol = precolumns[cellindex +3];
                var stdMark ={};
                stdMark.ScheduleId = $("#hfscheduleid").val();
                 stdMark.TeacherId = parseInt(tblFirstCol.TeacherId);
                  stdMark.ScheduleSectionId = $(this).val();
                 stdMark.ScheduleExamDateId =lstSchedExamIds[cellindex];
                 lststdMark.push(stdMark);


            });
        });
        return lststdMark;
    }

    function getScheduleSection(){
                $.ajax({
                        type: "post",
                        async : false,
                        url: '@Url.Action("GetScheduleSection","Schedule")',
                        data: { scheduleId : $("#hfscheduleid").val() },
                        dataType: 'json',
                        traditional: true,
                        success: function (response) {
                            if(response != null){
                               
                                var result = response;
                                setScheduleTeacherArray(result);
                                getSpScheduleTeacher();
                            }
                        },
                        error: function (response) {

                            toastr.error(`@_localization.Getkey("Error")`);
                        }
                    });

    }
    function setScheduleTeacherArray(data){
        lstSchedTeaArray=[];
        if(data !=null && data.length > 0){
           for(var i=0; i<data.length; i++){
               var objsec={};
               objsec.SectionId=data[i].sectionId;
               objsec.SectionName=data[i].sectionName;
               lstSchedTeaArray.push(objsec);
           }
        }
        return lstSchedTeaArray;

    }
     function setScheduleTeacherDropdown(secid){

         var options ="";
           for(var j= 0; j < lstSchedTeaArray.length; j++){
               if(lstSchedTeaArray[j].SectionId == secid){

                   options += '<option value='+lstSchedTeaArray[j].SectionId+' selected>'+lstSchedTeaArray[j].SectionName+'</option>'
               }
               else{

                   options += '<option value='+lstSchedTeaArray[j].SectionId+'>'+lstSchedTeaArray[j].SectionName+'</option>'
               }
            }

         var html='<select class="form-select form-select-sm"> '+
                       '<option value="-1"></option>'+
                                options +
                        '</select>'

            return html;
    }


    //Schedule Examination
     function getScheduleExamDateTime(){
                $.ajax({
                        type: "post",
                        async : false,
                        url: '@Url.Action("GetScheduleExamDateTime","Schedule")',
                        data: { scheduleId : $("#hfscheduleid").val() },
                        dataType: 'json',
                        traditional: true,
                        success: function (response) {
                            if (response != null) {   
                                
                                var result = response;
                                setScheduleExamDateArray(JSON.parse(result.strDate));
                                setScheduleExamTimeArray(JSON.parse(result.strTime));
                                getSpScheduleExam();
                               //setScheduleTeacherArray(response);
                               // getSpScheduleTeacher();
                            }
                        },
                        error: function (response) {

                            toastr.error(`@_localization.Getkey("Error")`);
                        }
                    });
    }
     function setScheduleExamDateArray(data){
        lstSchedExamDateArray=[];
        if(data !=null && data.length > 0){
           for(var i=0; i<data.length; i++){
               var objsec={};
               objsec.Id=data[i].Id;
               objsec.StrExamDate=data[i].StrExamDate;
               lstSchedExamDateArray.push(objsec);
           }
        }
        return lstSchedExamDateArray;
    }
    function setScheduleExamTimeArray(data){

        lstSchedExamTimeArray=[];
        if(data !=null && data.length > 0){
           for(var i=0; i<data.length; i++){
               var objsec={};
               objsec.ExamTimeId=data[i].ExamTimeId;
               objsec.ExamTime=data[i].ExamTime;
               lstSchedExamTimeArray.push(objsec);
           }
        }
        return lstSchedExamTimeArray;
    }
    function getSpScheduleExam(){
                $.ajax({
                        type: "post",
                        async : false,
                        url: '@Url.Action("GetSpScheduleExam","Schedule")',
                        data: { scheduleId : $("#hfscheduleid").val() },
                            dataType: 'json',
                        traditional: true,
                        success: function (response) {                           
                            var preResultArray=[];
                            var postResultArray=[];
                            if(response != null){
                                
                                var result = response;
                                 $("#divtimetable").show("slow", function() {
                                     if (result.postResult ==""){
                                        }
                                        else{
                                         var jsonpostData = JSON.parse(result.postResult);
                                            postResultArray.push(jsonpostData);
                                        }
                                     var jsonpreData = JSON.parse(result.preResult);
                                        preResultArray.push(jsonpreData);

                                        if(preResultArray[0].length > 0){
                                            onLoadScheduleExamData(preResultArray,postResultArray);
                                        }
                                  });


                            }
                        },
                        error: function (response) {
                            toastr.error(`@_localization.Getkey("Error")`);
                        }
                    });
    }
    function onLoadScheduleExamData(predata,postdata){

            columns = [];
            precolumns = [];
            //1.Get first row data to build columns from predata.
            var rowData = predata[0];
            if(rowData.length > 0){
                Object.keys(rowData[0]).forEach( function (key, index){
                if (key == 'ScheduleId' || key == 'BranchClassId' || key == 'ClassName') {

                    columns.push({data: key,
                                    title: key,
                                });
                                precolumns.push({data: key,
                                    title: key,
                                });

                }
                else{
                    var tmparray = key.split(',');
                    precolumns.push({data: rowData[0][key],
                                    title: tmparray[0],
                                });
                }
            })
            if(postdata[0].length == 0)  {
            Object.keys(rowData[0]).forEach( function (key, index){
                if (key == 'ScheduleId' || key == 'BranchClassId' || key == 'ClassName') {

                }
                else{
                    //var tmparray1 = key.split(',');
                    //lstSchedclssubIds.push(tmparray1[1]);
                    columns.push( {data: rowData[0][key],
                            title: key,
                            render: function (data, type, row) {
                                return setScheduleExamDateTimeDropdown('', 0);
                                //return '<input type="text"  class="form-control" required = "required" value="">';
                                }
                        });
                }
            })
            }
            else if(postdata[0].length > 0){
                var postrowData = postdata[0];
                Object.keys(postrowData[0]).forEach( function (key, index){
                if (key == 'ScheduleId' || key == 'BranchClassId' || key == 'ClassName') {

                }
                else{
                    //var tmparray2 = key.split(',');
                    //lstSchedclssubIds.push(tmparray2[1]);
                    columns.push( {data: postrowData[0][key],
                            title: key,
                            render: function (data, type, row) {

                                if(row[key]==0 || row[key]==""){
                                   // return  '<input type="text"  class="form-control" required = "required" value="">';
                                    return setScheduleExamDateTimeDropdown('',0);
                                }
                                else{
                                    var tmp = row[key].split(',');
                                     return setScheduleExamDateTimeDropdown(tmp[0],tmp[1]);
                                   // return '<input type="text"  class="form-control" required = "required" value="'+row[key]+'">';
                                }

                                }
                        });
                }
            })
            }

                $("#tbltimetable").DataTable({
                "bDestroy": true,
                data : postdata[0].length == 0 ? predata[0] : postdata[0],
                "aoColumnDefs": [{ "bVisible": false, "aTargets": [0,1] }],
                columns: columns,
                // dom: 'Bfrtip'
            })
            $("#loaderDiv1").hide();
            }
    }

    function setScheduleExamDateTimeDropdown(examdate, examtimeid){

         var toptions ="";
           for(var j= 0; j < lstSchedExamTimeArray.length; j++){
               if(lstSchedExamTimeArray[j].ExamTimeId == examtimeid){

                   toptions += '<option value='+lstSchedExamTimeArray[j].ExamTimeId+' selected>'+lstSchedExamTimeArray[j].ExamTime+'</option>'
               }
               else{

                   toptions += '<option value='+lstSchedExamTimeArray[j].ExamTimeId+'>'+lstSchedExamTimeArray[j].ExamTime+'</option>'
               }
            }

         var thtml='<select class="form-select form-select-sm"> '+
                       '<option value="-1"></option>'+
                                toptions +
                        '</select>';


         var doptions ="";
           for(var j= 0; j < lstSchedExamDateArray.length; j++){
               if(lstSchedExamDateArray[j].StrExamDate == examdate){

                   doptions += '<option value='+lstSchedExamDateArray[j].Id+' selected>'+lstSchedExamDateArray[j].StrExamDate+'</option>'
               }
               else{

                   doptions += '<option value='+lstSchedExamDateArray[j].Id+'>'+lstSchedExamDateArray[j].StrExamDate+'</option>'
               }
            }

          var dhtml='<select class="form-select form-select-sm"> '+
                       '<option value="-1"></option>'+
                                doptions +
                        '</select>';

        var html = '<div class="row gy-2 gx-2 align-items-center">'+
                        dhtml +
                        thtml +
                    '</div>'
            return html;
    }

     function submitScheduleExam(){
        var lstresult = getScheExamDateTimeArray();
                var obj={};
                obj.ScheduleId=$("#hfscheduleid").val();
                obj.LstScheduleExamination=lstresult;
                 var jdata = JSON.stringify(obj);
                 $.ajax({
                    type: 'POST',
                     url: '@Url.Action("SaveScheduleExamination","Schedule")',
                     dataType: "JSON",
                    data: {model :jdata },
                    success: function (response) {
                        if (response != null) {
                           
                             setProgress(3);
                            toastr.success('Saved Succesfully');
                            $("#divtimetable").hide("slow", function() {
                                    getScheduleStatus();
                                    getScheduleSection();
                                });

                            } else {

                                 toastr.error(`@_localization.Getkey("Error")`);
                            }
                    },
                    error: function (response) {

                             toastr.error(`@_localization.Getkey("Error")`);

                    }
                })
    }
     function getScheExamDateTimeArray(){
        var lststdMark = new Array();

        var tbldata = $("#tbltimetable").DataTable();
        jQuery(tbldata.rows().nodes()).each(function (item) {
            var tr =this;
            var tblFirstCol = tbldata.row(tr).data();

            $(this).find('div').each(function(cellindex) {

                var stdMark ={};
                stdMark.ScheduleId = $("#hfscheduleid").val();
                 stdMark.BranchClassId = parseInt(tblFirstCol.BranchClassId);
                // stdMark.ClassSubjectId =lstSchedclssubIds[cellindex];
                var objSub = precolumns[cellindex+3];
                 stdMark.ClassSubjectId =objSub.data;

                // stdMark.ScheduleSectionId = $(this).val();
                 var objdt = $(this).children()[0];
                 var strdt = $(objdt).find("option:selected").text();
                stdMark.StrExamDate = strdt;

                 var objtt = $(this).children()[1];
                stdMark.ExamTimeId = $(objtt).find("option:selected").val();

                lststdMark.push(stdMark);

            });
        });

        return lststdMark;
    }

    //Schedule RollNo
     function getSpScheduleStudent(){
                $.ajax({
                        type: "post",
                        async : false,
                        url: '@Url.Action("GetSpScheduleStudent","Schedule")',
                        data: { scheduleId : $("#hfscheduleid").val() },
                            dataType: 'json',
                        traditional: true,
                        success: function (response) {
                             
                            var preResultArray=[];
                            var postResultArray=[];
                            if(response != null){
                 
                                var result = response;

                                 $("#divstudent").show("slow", function() {
                                     if (result.postResult ==""){
                                        }
                                        else{
                                         var jsonpostData = JSON.parse(result.postResult);
                                            postResultArray.push(jsonpostData);
                                        }
                                     var jsonpreData = JSON.parse(result.preResult);
                                        preResultArray.push(jsonpreData);

                                        if(preResultArray[0].length > 0){
                                            onLoadScheduleStudentData(preResultArray,postResultArray);
                                        }
                                  });


                            }
                        },
                        error: function (response) {
                            toastr.error(`@_localization.Getkey("Error")`);
                        }
                    });
    }
     function onLoadScheduleStudentData(predata,postdata){

            columns = [];
            precolumns = [];
            //1.Get first row data to build columns from predata.
            var rowData = predata[0];
            if(rowData.length > 0){
                Object.keys(rowData[0]).forEach( function (key, index){
                if (key == 'ScheduleId' || key == 'BranchClassId' || key == 'ClassName') {

                    columns.push({data: key,
                                    title: key,
                                });
                                precolumns.push({data: key,
                                    title: key,
                                });

                }
                else{
                    precolumns.push({data: rowData[0][key],
                                    title: key,
                                });
                }
            })
            if(postdata[0].length == 0)  {
            Object.keys(rowData[0]).forEach( function (key, index){
                if (key == 'ScheduleId'|| key == 'BranchClassId' || key == 'ClassName') {

                }
                else{
                    columns.push( {data: rowData[0][key],
                            title: key,
                            render: function (data, type, row) {
                                return setScheduleRollNoInput('', '');
                                }
                        });
                }
            })
            }
            else if(postdata[0].length > 0){
                var postrowData = postdata[0];
                Object.keys(postrowData[0]).forEach( function (key, index){
                if (key == 'ScheduleId' || key == 'BranchClassId' || key == 'ClassName') {

                }
                else{

                    columns.push( {data: postrowData[0][key],
                            title: key,
                            render: function (data, type, row) {

                                if(row[key]==0 || row[key]==""){
                                    return setScheduleRollNoInput('','');
                                }
                                else{
                                    var tmp = row[key].split(',');

                                     return setScheduleRollNoInput(tmp[0],tmp[1]);
                                }

                                }
                        });
                }
            })
            }

                $("#tblstudentresult").DataTable({
                "bDestroy": true,
                data : postdata[0].length == 0 ? predata[0] : postdata[0],
                "aoColumnDefs": [{ "bVisible": false, "aTargets": [0,1] }],
                columns: columns,
                // dom: 'Bfrtip'
            })
            $("#loaderDiv1").hide();
            }
    }
    function setScheduleRollNoInput(fromrollno, torollno){

         var frmhtml='From Roll No <input class="form-control form-control-sm" type="text" value='+fromrollno+'>'
         var tohtml='To Roll No <input class="form-control form-control-sm" type="text" value='+torollno+'>'

        var html = '<div>'+
                        frmhtml +
                        tohtml +
                    '</div>'
            return html;
    }

    function getScheRollNoArray(){
        var lststdMark = new Array();

        var tbldata = $("#tblstudentresult").DataTable();
        jQuery(tbldata.rows().nodes()).each(function (item) {
            var tr =this;
            var tblFirstCol = tbldata.row(tr).data();

            $(this).find('div').each(function(cellindex) {

                var stdMark ={};
                stdMark.ScheduleId = parseInt(tblFirstCol.ScheduleId);
                 stdMark.BranchClassId = parseInt(tblFirstCol.BranchClassId);
                 var objsec = precolumns[cellindex+3];
                 stdMark.SectionId =objsec.data;

                // stdMark.ScheduleSectionId = $(this).val();
                 var objdt = $(this).children()[0];
                stdMark.FromRollNo = $(objdt).val();

                 var objtt = $(this).children()[1];
                stdMark.ToRollNo = $(objtt).val();

                lststdMark.push(stdMark);

            });
        });
        return lststdMark;
    }
     function submitScheduleRollNo(){
         $("#loaderDiv1").show();
        var lstresult = getScheRollNoArray();
                var obj={};
                obj.ScheduleId=$("#hfscheduleid").val();
                obj.LstScheduleBranchClassRollNo=lstresult;
                 var jdata = JSON.stringify(obj);
                 $.ajax({
                    type: 'POST',
                     url: '@Url.Action("SaveScheduleRollNo","Schedule")',
                     dataType: "JSON",
                    data: {model :jdata },
                    success: function (response) {
                        console.log(response);
                        if (response != null) {
                            $("#loaderDiv1").hide();
                             toastr.success('Saved Succesfully');
                             setProgress(5);
                             $("#divstudent").hide("slow", function() {
                                  getScheduleStatus();
                                   $("#divcomplete").show();
                              });

                            } else {
                                 toastr.error(`@_localization.Getkey("Error")`);
                            }
                    },
                    error: function (response) {
                             toastr.error(`@_localization.Getkey("Error")`);
                    }
                })
    }

    function setAlgoStudent(){
        $("#loaderDiv1").show();
        $.ajax({
                type: "POST",
                async : false,
                url: '@Url.Action("SaveScheduleStudentAlgo","Schedule")',
                data: { scheduleId: $("#hfscheduleid").val() },
                dataType: 'json',
                traditional: true,
                success: function (response) {
                    if(response != null && response > 0){
                        $("#divstudent").show("slow", function() {
                                    fillStudent();
                         });
                    }
                    else {
                        toastr.error(`@_localization.Getkey("Error")`);
                    }
                },
                error: function (response) {

                        toastr.error(`@_localization.Getkey("Error")`);
                }
            });
    }
    function fillStudent(){
        $("#loaderDiv1").show();
                    $.ajax({
                            type: "POST",
                            async : false,
                            url: '@Url.Action("GetScheduleStudent","Schedule")',
                            data: { scheduleId: $("#hfscheduleid").val() },
                            dataType: 'json',
                            traditional: true,
                            success: function (response) {
                                if(response != null){

                                    var studentData=[];

                                    $.each(response,function(key,value){

                                    var dropDown = createDropDown(value.scheduleSectionSheet,value.scheduleSectionId);

                                        studentData.push([value.id,value.scheduleSectionId,value.registerNo,value.fullName,value.genderName,value.className,value.sectionName,dropDown])
                                    })

                                    $("#tblstudentresult").DataTable({
                                        "bDestroy": true,
                                        data : studentData,
                                        "aoColumnDefs": [{ "bVisible": false, "aTargets": [0,1] }]
                                    })
                                    $("#loaderDiv1").hide();

                                }
                                else {
                                    toastr.error(`@_localization.Getkey("Error")`);
                                }
                            },
                            error: function (response) {
                                    toastr.error(`@_localization.Getkey("Error")`);
                            }
                        });
    }
     function createDropDown(data,secid) {
             var html = '<select class="form-select form-select-sm" required = "required"><option value="">Select a Section...</option>';
             for (var item of data) {
                 if(item.value == secid){
                     html += '<option value="' + item.value + '" selected="selected">' + item.text + '</option>';
                 }
                 else{
                         html += '<option value="' + item.value + '">' + item.text + '</option>';
                 }
             }
             html += '</select>';
             return html;
     }
    function submitScheduleStudent(){
         var lstresult = getStudentSectionArray();
             var obj={};
             obj.ScheduleId = $('#hfscheduleid').val();
             obj.LstScheduleStudent=lstresult;
              var jdata = JSON.stringify(obj);
              $.ajax({
                 type: 'POST',
                  url: '@Url.Action("SaveScheduleStudent","Schedule")',
                  dataType: "JSON",
                 data: {model :jdata },
                 success: function (response) {
                     if (response != null && response > 0) {
                            $("#loaderDiv1").hide();
                             toastr.success('Saved Succesfully');
                             setProgress(5);
                             $("#divstudent").hide("slow", function() {
                                  getScheduleStatus();
                                   $("#divcomplete").show();
                              });
                         } else {
                              toastr.error(`@_localization.Getkey("Error")`);
                         }
                 },
                 error: function (response) {
                          toastr.error(`@_localization.Getkey("Error")`);

                 }
             })
     }
     function getStudentSectionArray(){
         var lststdMark = new Array();
         var tbldata = $("#tblstudentresult").DataTable();
         jQuery(tbldata.rows().nodes()).each(function (item) {
             var tr =this;
             var tblFirstCol = tbldata.row(tr).data();
             $(this).find('select').each (function(cellindex) {
                 var stdMark ={};
                  stdMark.Id = parseInt(tblFirstCol[0]);
                   stdMark.ScheduleSectionId = $(this).val();
                  lststdMark.push(stdMark);
             });
         });

         return lststdMark;
     }
      function submitFinish(){
          $("#loaderDiv1").show();
           $.ajax({
                 type: "post",
                 async : false,
                 url: '@Url.Action("UpdateScheduleFinishStatus","Schedule")',
                 data: {scheduleId : $("#hfscheduleid").val() },
                 dataType: 'json',
                 traditional: true,
                 success: function (response) {
                     if(response != null){
                         toastr.success("Saved Successfully");
                         setProgress(6);
                          getScheduleStatus();
                        $("#loaderDiv1").hide();
                     }
                 },
                 error: function (response) {
                             toastr.error(`@_localization.Getkey("Error")`);
                 }
             });
     }
     function navigateDiv(from, to){

        switch(from){
            case 1 :
                switch(to){
                        case 1 :
                        break;
                        case 2 :
                                $("#divschedule").hide("slow", function() {
                                    setScheduleData();
                                    getBranchClassSubjectBySchedule();
                                });
                        break;
                }
            break;
            case 2 :
                switch(to){
                        case 1 :
                            $("#divclassubj").hide("slow", function() {
                                     $("#divschedulebar").hide();
                                    $("#divschedule").show();
                           });

                        break;
                        case 3 :
                             $("#divclassubj").hide("slow", function() {
                                   // getPivotTimeTable();
                                   getScheduleExamDateTime();
                            });
                        break;
                }
            break;
            case 3 :
                switch(to){
                        case 2 :
                            $("#divtimetable").hide("slow", function() {
                                        $("#divclassubj").show();
                                });
                        break;
                        case 4 :
                             $("#divtimetable").hide("slow", function() {
                                           // getPivotTeacher();
                                           getScheduleSection();
                                    });
                        break;

                }
            break;
            case 4 :
                switch(to){
                        case 3 :
                         $("#divteacher").hide("slow", function() {
                                             $("#divtimetable").show();
                                    });
                        break;
                        case 5 :
                        $("#divteacher").hide("slow", function() {
                                   // $("#divstudent").show();
                               // fillStudent();
                               getSpScheduleStudent();
                         });

                        break;

                }
            break;
            case 5 :
                switch(to){
                        case 4 :
                        $("#divstudent").hide("slow", function() {
                                            $("#divteacher").show();
                                    });

                        break;
                        case 6 :
                         $("#divstudent").hide("slow", function() {
                                  $("#divcomplete").show();
                          });

                        break;

                }
            break;
            case 6 :
                switch(to){
                        case 5 :
                         $("#divcomplete").hide("slow", function() {
                                 $("#divstudent").show();
                          });

                        break;

                }
            break;
        }
     }
</script>